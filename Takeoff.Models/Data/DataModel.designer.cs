#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Takeoff.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Takeoff")]
	public partial class DataModelBase : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Takeoff.Models.Data.Account instance);
    partial void UpdateAccount(Takeoff.Models.Data.Account instance);
    partial void DeleteAccount(Takeoff.Models.Data.Account instance);
    partial void InsertAccountMembership(Takeoff.Models.Data.AccountMembership instance);
    partial void UpdateAccountMembership(Takeoff.Models.Data.AccountMembership instance);
    partial void DeleteAccountMembership(Takeoff.Models.Data.AccountMembership instance);
    partial void InsertActivitySummaryEmail(Takeoff.Models.Data.ActivitySummaryEmail instance);
    partial void UpdateActivitySummaryEmail(Takeoff.Models.Data.ActivitySummaryEmail instance);
    partial void DeleteActivitySummaryEmail(Takeoff.Models.Data.ActivitySummaryEmail instance);
    partial void InsertAction(Takeoff.Models.Data.Action instance);
    partial void UpdateAction(Takeoff.Models.Data.Action instance);
    partial void DeleteAction(Takeoff.Models.Data.Action instance);
    partial void InsertActionSource(Takeoff.Models.Data.ActionSource instance);
    partial void UpdateActionSource(Takeoff.Models.Data.ActionSource instance);
    partial void DeleteActionSource(Takeoff.Models.Data.ActionSource instance);
    partial void InsertComment(Takeoff.Models.Data.Comment instance);
    partial void UpdateComment(Takeoff.Models.Data.Comment instance);
    partial void DeleteComment(Takeoff.Models.Data.Comment instance);
    partial void InsertEncodeLog(Takeoff.Models.Data.EncodeLog instance);
    partial void UpdateEncodeLog(Takeoff.Models.Data.EncodeLog instance);
    partial void DeleteEncodeLog(Takeoff.Models.Data.EncodeLog instance);
    partial void InsertFeatureAccess(Takeoff.Models.Data.FeatureAccess instance);
    partial void UpdateFeatureAccess(Takeoff.Models.Data.FeatureAccess instance);
    partial void DeleteFeatureAccess(Takeoff.Models.Data.FeatureAccess instance);
    partial void InsertFile(Takeoff.Models.Data.File instance);
    partial void UpdateFile(Takeoff.Models.Data.File instance);
    partial void DeleteFile(Takeoff.Models.Data.File instance);
    partial void InsertFileDownloadLog(Takeoff.Models.Data.FileDownloadLog instance);
    partial void UpdateFileDownloadLog(Takeoff.Models.Data.FileDownloadLog instance);
    partial void DeleteFileDownloadLog(Takeoff.Models.Data.FileDownloadLog instance);
    partial void InsertFileUploadLog(Takeoff.Models.Data.FileUploadLog instance);
    partial void UpdateFileUploadLog(Takeoff.Models.Data.FileUploadLog instance);
    partial void DeleteFileUploadLog(Takeoff.Models.Data.FileUploadLog instance);
    partial void InsertImage(Takeoff.Models.Data.Image instance);
    partial void UpdateImage(Takeoff.Models.Data.Image instance);
    partial void DeleteImage(Takeoff.Models.Data.Image instance);
    partial void InsertJobLog(Takeoff.Models.Data.JobLog instance);
    partial void UpdateJobLog(Takeoff.Models.Data.JobLog instance);
    partial void DeleteJobLog(Takeoff.Models.Data.JobLog instance);
    partial void InsertMembership(Takeoff.Models.Data.Membership instance);
    partial void UpdateMembership(Takeoff.Models.Data.Membership instance);
    partial void DeleteMembership(Takeoff.Models.Data.Membership instance);
    partial void InsertMembershipRequest(Takeoff.Models.Data.MembershipRequest instance);
    partial void UpdateMembershipRequest(Takeoff.Models.Data.MembershipRequest instance);
    partial void DeleteMembershipRequest(Takeoff.Models.Data.MembershipRequest instance);
    partial void InsertMembershipRequestAutoReponse(Takeoff.Models.Data.MembershipRequestAutoReponse instance);
    partial void UpdateMembershipRequestAutoReponse(Takeoff.Models.Data.MembershipRequestAutoReponse instance);
    partial void DeleteMembershipRequestAutoReponse(Takeoff.Models.Data.MembershipRequestAutoReponse instance);
    partial void InsertOutgoingEmailLinkClickLog(Takeoff.Models.Data.OutgoingEmailLinkClickLog instance);
    partial void UpdateOutgoingEmailLinkClickLog(Takeoff.Models.Data.OutgoingEmailLinkClickLog instance);
    partial void DeleteOutgoingEmailLinkClickLog(Takeoff.Models.Data.OutgoingEmailLinkClickLog instance);
    partial void InsertOutgoingEmailLog(Takeoff.Models.Data.OutgoingEmailLog instance);
    partial void UpdateOutgoingEmailLog(Takeoff.Models.Data.OutgoingEmailLog instance);
    partial void DeleteOutgoingEmailLog(Takeoff.Models.Data.OutgoingEmailLog instance);
    partial void InsertOutgoingEmailOpenLog(Takeoff.Models.Data.OutgoingEmailOpenLog instance);
    partial void UpdateOutgoingEmailOpenLog(Takeoff.Models.Data.OutgoingEmailOpenLog instance);
    partial void DeleteOutgoingEmailOpenLog(Takeoff.Models.Data.OutgoingEmailOpenLog instance);
    partial void InsertPermission(Takeoff.Models.Data.Permission instance);
    partial void UpdatePermission(Takeoff.Models.Data.Permission instance);
    partial void DeletePermission(Takeoff.Models.Data.Permission instance);
    partial void InsertProject(Takeoff.Models.Data.Project instance);
    partial void UpdateProject(Takeoff.Models.Data.Project instance);
    partial void DeleteProject(Takeoff.Models.Data.Project instance);
    partial void InsertRecurlyWebHookLog(Takeoff.Models.Data.RecurlyWebHookLog instance);
    partial void UpdateRecurlyWebHookLog(Takeoff.Models.Data.RecurlyWebHookLog instance);
    partial void DeleteRecurlyWebHookLog(Takeoff.Models.Data.RecurlyWebHookLog instance);
    partial void InsertServerRequestLog(Takeoff.Models.Data.ServerRequestLog instance);
    partial void UpdateServerRequestLog(Takeoff.Models.Data.ServerRequestLog instance);
    partial void DeleteServerRequestLog(Takeoff.Models.Data.ServerRequestLog instance);
    partial void InsertSetting(Takeoff.Models.Data.Setting instance);
    partial void UpdateSetting(Takeoff.Models.Data.Setting instance);
    partial void DeleteSetting(Takeoff.Models.Data.Setting instance);
    partial void InsertThing(Takeoff.Models.Data.Thing instance);
    partial void UpdateThing(Takeoff.Models.Data.Thing instance);
    partial void DeleteThing(Takeoff.Models.Data.Thing instance);
    partial void InsertThingAccessLog(Takeoff.Models.Data.ThingAccessLog instance);
    partial void UpdateThingAccessLog(Takeoff.Models.Data.ThingAccessLog instance);
    partial void DeleteThingAccessLog(Takeoff.Models.Data.ThingAccessLog instance);
    partial void InsertUser(Takeoff.Models.Data.User instance);
    partial void UpdateUser(Takeoff.Models.Data.User instance);
    partial void DeleteUser(Takeoff.Models.Data.User instance);
    partial void InsertVideoComment(Takeoff.Models.Data.VideoComment instance);
    partial void UpdateVideoComment(Takeoff.Models.Data.VideoComment instance);
    partial void DeleteVideoComment(Takeoff.Models.Data.VideoComment instance);
    partial void InsertVideoStream(Takeoff.Models.Data.VideoStream instance);
    partial void UpdateVideoStream(Takeoff.Models.Data.VideoStream instance);
    partial void DeleteVideoStream(Takeoff.Models.Data.VideoStream instance);
    partial void InsertVideoThumbnail(Takeoff.Models.Data.VideoThumbnail instance);
    partial void UpdateVideoThumbnail(Takeoff.Models.Data.VideoThumbnail instance);
    partial void DeleteVideoThumbnail(Takeoff.Models.Data.VideoThumbnail instance);
    partial void InsertVideoWatchLog(Takeoff.Models.Data.VideoWatchLog instance);
    partial void UpdateVideoWatchLog(Takeoff.Models.Data.VideoWatchLog instance);
    partial void DeleteVideoWatchLog(Takeoff.Models.Data.VideoWatchLog instance);
    partial void InsertViewPrompt(Takeoff.Models.Data.ViewPrompt instance);
    partial void UpdateViewPrompt(Takeoff.Models.Data.ViewPrompt instance);
    partial void DeleteViewPrompt(Takeoff.Models.Data.ViewPrompt instance);
    partial void InsertSemiAnonymousUser(Takeoff.Models.Data.SemiAnonymousUser instance);
    partial void UpdateSemiAnonymousUser(Takeoff.Models.Data.SemiAnonymousUser instance);
    partial void DeleteSemiAnonymousUser(Takeoff.Models.Data.SemiAnonymousUser instance);
    partial void InsertVideo(Takeoff.Models.Data.Video instance);
    partial void UpdateVideo(Takeoff.Models.Data.Video instance);
    partial void DeleteVideo(Takeoff.Models.Data.Video instance);
    partial void InsertBusinessEvent(Takeoff.Models.Data.BusinessEvent instance);
    partial void UpdateBusinessEvent(Takeoff.Models.Data.BusinessEvent instance);
    partial void DeleteBusinessEvent(Takeoff.Models.Data.BusinessEvent instance);
    partial void InsertBusinessEventParameter(Takeoff.Models.Data.BusinessEventParameter instance);
    partial void UpdateBusinessEventParameter(Takeoff.Models.Data.BusinessEventParameter instance);
    partial void DeleteBusinessEventParameter(Takeoff.Models.Data.BusinessEventParameter instance);
    partial void InsertPlan(Takeoff.Models.Data.Plan instance);
    partial void UpdatePlan(Takeoff.Models.Data.Plan instance);
    partial void DeletePlan(Takeoff.Models.Data.Plan instance);
    #endregion
		
		public DataModelBase() : 
				base(global::Takeoff.Models.Properties.Settings.Default.TakeoffConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelBase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelBase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelBase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelBase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.Account> Accounts
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.Account>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.AccountMembership> AccountMemberships
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.AccountMembership>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.ActivitySummaryEmail> ActivitySummaryEmails
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.ActivitySummaryEmail>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.Action> Actions
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.Action>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.ActionSource> ActionSources
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.ActionSource>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.Comment> Comments
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.Comment>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.EncodeLog> EncodeLogs
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.EncodeLog>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.FeatureAccess> FeatureAccesses
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.FeatureAccess>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.File> Files
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.File>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.FileDownloadLog> FileDownloadLogs
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.FileDownloadLog>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.FileUploadLog> FileUploadLogs
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.FileUploadLog>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.Image> Images
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.Image>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.JobLog> JobLogs
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.JobLog>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.Membership> Memberships
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.Membership>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.MembershipRequest> MembershipRequests
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.MembershipRequest>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.MembershipRequestAutoReponse> MembershipRequestAutoReponses
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.MembershipRequestAutoReponse>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.OutgoingEmailLinkClickLog> OutgoingEmailLinkClickLogs
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.OutgoingEmailLinkClickLog>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.OutgoingEmailLog> OutgoingEmailLogs
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.OutgoingEmailLog>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.OutgoingEmailOpenLog> OutgoingEmailOpenLogs
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.OutgoingEmailOpenLog>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.Permission> Permissions
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.Permission>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.Project> Projects
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.Project>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.RecurlyWebHookLog> RecurlyWebHookLogs
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.RecurlyWebHookLog>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.ServerRequestLog> ServerRequestLogs
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.ServerRequestLog>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.Setting> Settings
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.Setting>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.Thing> Things
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.Thing>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.ThingAccessLog> ThingAccessLogs
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.ThingAccessLog>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.User> Users
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.User>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.VideoComment> VideoComments
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.VideoComment>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.VideoStream> VideoStreams
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.VideoStream>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.VideoThumbnail> VideoThumbnails
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.VideoThumbnail>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.VideoWatchLog> VideoWatchLogs
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.VideoWatchLog>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.ViewPrompt> ViewPrompts
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.ViewPrompt>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.SemiAnonymousUser> SemiAnonymousUsers
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.SemiAnonymousUser>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.Video> Videos
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.Video>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.BusinessEvent> BusinessEvents
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.BusinessEvent>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.BusinessEventParameter> BusinessEventParameters
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.BusinessEventParameter>();
			}
		}
		
		public System.Data.Linq.Table<Takeoff.Models.Data.Plan> Plans
		{
			get
			{
				return this.GetTable<Takeoff.Models.Data.Plan>();
			}
		}
	}
}
namespace Takeoff.Models.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private System.Nullable<int> _LogoImageId;
		
		private string _FilesLocation;
		
		private string _PlanId;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _ConvertedFromBetaOn;
		
		private System.Nullable<System.DateTime> _DemoConvertedOn;
		
		private System.Nullable<System.DateTime> _SubscriptionCreatedOn;
		
		private System.Nullable<System.DateTime> _TrialPeriodEndsOn;
		
		private System.Nullable<System.DateTime> _CurrentBillingPeriodStartedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnLogoImageIdChanging(System.Nullable<int> value);
    partial void OnLogoImageIdChanged();
    partial void OnFilesLocationChanging(string value);
    partial void OnFilesLocationChanged();
    partial void OnPlanIdChanging(string value);
    partial void OnPlanIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnConvertedFromBetaOnChanging(System.Nullable<System.DateTime> value);
    partial void OnConvertedFromBetaOnChanged();
    partial void OnDemoConvertedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnDemoConvertedOnChanged();
    partial void OnSubscriptionCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSubscriptionCreatedOnChanged();
    partial void OnTrialPeriodEndsOnChanging(System.Nullable<System.DateTime> value);
    partial void OnTrialPeriodEndsOnChanged();
    partial void OnCurrentBillingPeriodStartedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCurrentBillingPeriodStartedOnChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoImageId", DbType="Int")]
		public System.Nullable<int> LogoImageId
		{
			get
			{
				return this._LogoImageId;
			}
			set
			{
				if ((this._LogoImageId != value))
				{
					this.OnLogoImageIdChanging(value);
					this.SendPropertyChanging();
					this._LogoImageId = value;
					this.SendPropertyChanged("LogoImageId");
					this.OnLogoImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilesLocation", DbType="VarChar(200)")]
		public string FilesLocation
		{
			get
			{
				return this._FilesLocation;
			}
			set
			{
				if ((this._FilesLocation != value))
				{
					this.OnFilesLocationChanging(value);
					this.SendPropertyChanging();
					this._FilesLocation = value;
					this.SendPropertyChanged("FilesLocation");
					this.OnFilesLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanId", DbType="VarChar(100)")]
		public string PlanId
		{
			get
			{
				return this._PlanId;
			}
			set
			{
				if ((this._PlanId != value))
				{
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PlanId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvertedFromBetaOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConvertedFromBetaOn
		{
			get
			{
				return this._ConvertedFromBetaOn;
			}
			set
			{
				if ((this._ConvertedFromBetaOn != value))
				{
					this.OnConvertedFromBetaOnChanging(value);
					this.SendPropertyChanging();
					this._ConvertedFromBetaOn = value;
					this.SendPropertyChanged("ConvertedFromBetaOn");
					this.OnConvertedFromBetaOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemoConvertedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> DemoConvertedOn
		{
			get
			{
				return this._DemoConvertedOn;
			}
			set
			{
				if ((this._DemoConvertedOn != value))
				{
					this.OnDemoConvertedOnChanging(value);
					this.SendPropertyChanging();
					this._DemoConvertedOn = value;
					this.SendPropertyChanged("DemoConvertedOn");
					this.OnDemoConvertedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionCreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubscriptionCreatedOn
		{
			get
			{
				return this._SubscriptionCreatedOn;
			}
			set
			{
				if ((this._SubscriptionCreatedOn != value))
				{
					this.OnSubscriptionCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionCreatedOn = value;
					this.SendPropertyChanged("SubscriptionCreatedOn");
					this.OnSubscriptionCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialPeriodEndsOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrialPeriodEndsOn
		{
			get
			{
				return this._TrialPeriodEndsOn;
			}
			set
			{
				if ((this._TrialPeriodEndsOn != value))
				{
					this.OnTrialPeriodEndsOnChanging(value);
					this.SendPropertyChanging();
					this._TrialPeriodEndsOn = value;
					this.SendPropertyChanged("TrialPeriodEndsOn");
					this.OnTrialPeriodEndsOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentBillingPeriodStartedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CurrentBillingPeriodStartedOn
		{
			get
			{
				return this._CurrentBillingPeriodStartedOn;
			}
			set
			{
				if ((this._CurrentBillingPeriodStartedOn != value))
				{
					this.OnCurrentBillingPeriodStartedOnChanging(value);
					this.SendPropertyChanging();
					this._CurrentBillingPeriodStartedOn = value;
					this.SendPropertyChanged("CurrentBillingPeriodStartedOn");
					this.OnCurrentBillingPeriodStartedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountMembership")]
	public partial class AccountMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private string _RoleName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public AccountMembership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(20)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivitySummaryEmail")]
	public partial class ActivitySummaryEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _SentOn;
		
		private System.DateTime _PeriodStart;
		
		private System.DateTime _PeriodEnd;
		
		private System.Nullable<System.Guid> _JobId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSentOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSentOnChanged();
    partial void OnPeriodStartChanging(System.DateTime value);
    partial void OnPeriodStartChanged();
    partial void OnPeriodEndChanging(System.DateTime value);
    partial void OnPeriodEndChanged();
    partial void OnJobIdChanging(System.Nullable<System.Guid> value);
    partial void OnJobIdChanged();
    #endregion
		
		public ActivitySummaryEmail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> SentOn
		{
			get
			{
				return this._SentOn;
			}
			set
			{
				if ((this._SentOn != value))
				{
					this.OnSentOnChanging(value);
					this.SendPropertyChanging();
					this._SentOn = value;
					this.SendPropertyChanged("SentOn");
					this.OnSentOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodStart", DbType="DateTime NOT NULL")]
		public System.DateTime PeriodStart
		{
			get
			{
				return this._PeriodStart;
			}
			set
			{
				if ((this._PeriodStart != value))
				{
					this.OnPeriodStartChanging(value);
					this.SendPropertyChanging();
					this._PeriodStart = value;
					this.SendPropertyChanged("PeriodStart");
					this.OnPeriodStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodEnd", DbType="DateTime NOT NULL")]
		public System.DateTime PeriodEnd
		{
			get
			{
				return this._PeriodEnd;
			}
			set
			{
				if ((this._PeriodEnd != value))
				{
					this.OnPeriodEndChanging(value);
					this.SendPropertyChanging();
					this._PeriodEnd = value;
					this.SendPropertyChanged("PeriodEnd");
					this.OnPeriodEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Change")]
	public partial class Action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ThingId;
		
		private int _ChangeDetailsId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnChangeDetailsIdChanging(int value);
    partial void OnChangeDetailsIdChanged();
    #endregion
		
		public Action()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL")]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDetailsId", DbType="Int NOT NULL")]
		public int ChangeDetailsId
		{
			get
			{
				return this._ChangeDetailsId;
			}
			set
			{
				if ((this._ChangeDetailsId != value))
				{
					this.OnChangeDetailsIdChanging(value);
					this.SendPropertyChanging();
					this._ChangeDetailsId = value;
					this.SendPropertyChanged("ChangeDetailsId");
					this.OnChangeDetailsIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeSource")]
	public partial class ActionSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private int _UserId;
		
		private int _ThingId;
		
		private string _ThingType;
		
		private System.Nullable<int> _ThingParentId;
		
		private string _Action;
		
		private string _Data;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnThingTypeChanging(string value);
    partial void OnThingTypeChanged();
    partial void OnThingParentIdChanging(System.Nullable<int> value);
    partial void OnThingParentIdChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ActionSource()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL")]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingType", DbType="VarChar(30)")]
		public string ThingType
		{
			get
			{
				return this._ThingType;
			}
			set
			{
				if ((this._ThingType != value))
				{
					this.OnThingTypeChanging(value);
					this.SendPropertyChanging();
					this._ThingType = value;
					this.SendPropertyChanged("ThingType");
					this.OnThingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingParentId", DbType="Int")]
		public System.Nullable<int> ThingParentId
		{
			get
			{
				return this._ThingParentId;
			}
			set
			{
				if ((this._ThingParentId != value))
				{
					this.OnThingParentIdChanging(value);
					this.SendPropertyChanging();
					this._ThingParentId = value;
					this.SendPropertyChanged("ThingParentId");
					this.OnThingParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(20)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private string _Body;
		
		private System.Nullable<System.Guid> _CreatedBySemiAnonymousUserId;
		
		private string _CreatedBySemiAnonymousUserName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnCreatedBySemiAnonymousUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedBySemiAnonymousUserIdChanged();
    partial void OnCreatedBySemiAnonymousUserNameChanging(string value);
    partial void OnCreatedBySemiAnonymousUserNameChanged();
    #endregion
		
		public Comment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBySemiAnonymousUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBySemiAnonymousUserId
		{
			get
			{
				return this._CreatedBySemiAnonymousUserId;
			}
			set
			{
				if ((this._CreatedBySemiAnonymousUserId != value))
				{
					this.OnCreatedBySemiAnonymousUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedBySemiAnonymousUserId = value;
					this.SendPropertyChanged("CreatedBySemiAnonymousUserId");
					this.OnCreatedBySemiAnonymousUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBySemiAnonymousUserName", DbType="VarChar(500)")]
		public string CreatedBySemiAnonymousUserName
		{
			get
			{
				return this._CreatedBySemiAnonymousUserName;
			}
			set
			{
				if ((this._CreatedBySemiAnonymousUserName != value))
				{
					this.OnCreatedBySemiAnonymousUserNameChanging(value);
					this.SendPropertyChanging();
					this._CreatedBySemiAnonymousUserName = value;
					this.SendPropertyChanged("CreatedBySemiAnonymousUserName");
					this.OnCreatedBySemiAnonymousUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EncodeLog")]
	public partial class EncodeLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _AccountId;
		
		private int _InputId;
		
		private string _InputUrl;
		
		private int _InputBytes;
		
		private string _InputOriginalFileName;
		
		private System.Nullable<double> _InputDuration;
		
		private System.Nullable<double> _UploadDuration;
		
		private System.Nullable<System.DateTime> _UploadCompleted;
		
		private string _Encoder;
		
		private string _EncoderJobId;
		
		private System.Nullable<System.DateTime> _EncodingTriageRequested;
		
		private System.Nullable<System.DateTime> _EncodingTriageStarted;
		
		private System.Nullable<System.DateTime> _EncodingRequested;
		
		private System.Nullable<System.DateTime> _EncodingCompleted;
		
		private System.Nullable<int> _ErrorCode;
		
		private System.Nullable<int> _Outputs;
		
		private string _InputFileFormat;
		
		private string _InputVideoFormat;
		
		private System.Nullable<double> _InputFrameRate;
		
		private System.Nullable<int> _InputWidth;
		
		private System.Nullable<int> _InputHeight;
		
		private System.Nullable<int> _InputVideoBitRate;
		
		private string _InputAudioFormat;
		
		private System.Nullable<int> _InputAudioBitRate;
		
		private System.Nullable<System.DateTime> _JobCompleted;
		
		private System.Nullable<System.DateTime> _UploadStarted;
		
		private System.Nullable<double> _JobDuration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnInputIdChanging(int value);
    partial void OnInputIdChanged();
    partial void OnInputUrlChanging(string value);
    partial void OnInputUrlChanged();
    partial void OnInputBytesChanging(int value);
    partial void OnInputBytesChanged();
    partial void OnInputOriginalFileNameChanging(string value);
    partial void OnInputOriginalFileNameChanged();
    partial void OnInputDurationChanging(System.Nullable<double> value);
    partial void OnInputDurationChanged();
    partial void OnUploadDurationChanging(System.Nullable<double> value);
    partial void OnUploadDurationChanged();
    partial void OnUploadCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadCompletedChanged();
    partial void OnEncoderChanging(string value);
    partial void OnEncoderChanged();
    partial void OnEncoderJobIdChanging(string value);
    partial void OnEncoderJobIdChanged();
    partial void OnEncodingTriageRequestedChanging(System.Nullable<System.DateTime> value);
    partial void OnEncodingTriageRequestedChanged();
    partial void OnEncodingTriageStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnEncodingTriageStartedChanged();
    partial void OnEncodingRequestedChanging(System.Nullable<System.DateTime> value);
    partial void OnEncodingRequestedChanged();
    partial void OnEncodingCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnEncodingCompletedChanged();
    partial void OnErrorCodeChanging(System.Nullable<int> value);
    partial void OnErrorCodeChanged();
    partial void OnOutputsChanging(System.Nullable<int> value);
    partial void OnOutputsChanged();
    partial void OnInputFileFormatChanging(string value);
    partial void OnInputFileFormatChanged();
    partial void OnInputVideoFormatChanging(string value);
    partial void OnInputVideoFormatChanged();
    partial void OnInputFrameRateChanging(System.Nullable<double> value);
    partial void OnInputFrameRateChanged();
    partial void OnInputWidthChanging(System.Nullable<int> value);
    partial void OnInputWidthChanged();
    partial void OnInputHeightChanging(System.Nullable<int> value);
    partial void OnInputHeightChanged();
    partial void OnInputVideoBitRateChanging(System.Nullable<int> value);
    partial void OnInputVideoBitRateChanged();
    partial void OnInputAudioFormatChanging(string value);
    partial void OnInputAudioFormatChanged();
    partial void OnInputAudioBitRateChanging(System.Nullable<int> value);
    partial void OnInputAudioBitRateChanged();
    partial void OnJobCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnJobCompletedChanged();
    partial void OnUploadStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadStartedChanged();
    partial void OnJobDurationChanging(System.Nullable<double> value);
    partial void OnJobDurationChanged();
    #endregion
		
		public EncodeLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InputId
		{
			get
			{
				return this._InputId;
			}
			set
			{
				if ((this._InputId != value))
				{
					this.OnInputIdChanging(value);
					this.SendPropertyChanging();
					this._InputId = value;
					this.SendPropertyChanged("InputId");
					this.OnInputIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputUrl", DbType="VarChar(500)")]
		public string InputUrl
		{
			get
			{
				return this._InputUrl;
			}
			set
			{
				if ((this._InputUrl != value))
				{
					this.OnInputUrlChanging(value);
					this.SendPropertyChanging();
					this._InputUrl = value;
					this.SendPropertyChanged("InputUrl");
					this.OnInputUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputBytes", DbType="Int NOT NULL")]
		public int InputBytes
		{
			get
			{
				return this._InputBytes;
			}
			set
			{
				if ((this._InputBytes != value))
				{
					this.OnInputBytesChanging(value);
					this.SendPropertyChanging();
					this._InputBytes = value;
					this.SendPropertyChanged("InputBytes");
					this.OnInputBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputOriginalFileName", DbType="VarChar(500)")]
		public string InputOriginalFileName
		{
			get
			{
				return this._InputOriginalFileName;
			}
			set
			{
				if ((this._InputOriginalFileName != value))
				{
					this.OnInputOriginalFileNameChanging(value);
					this.SendPropertyChanging();
					this._InputOriginalFileName = value;
					this.SendPropertyChanged("InputOriginalFileName");
					this.OnInputOriginalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDuration", DbType="Float")]
		public System.Nullable<double> InputDuration
		{
			get
			{
				return this._InputDuration;
			}
			set
			{
				if ((this._InputDuration != value))
				{
					this.OnInputDurationChanging(value);
					this.SendPropertyChanging();
					this._InputDuration = value;
					this.SendPropertyChanged("InputDuration");
					this.OnInputDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDuration", DbType="Float")]
		public System.Nullable<double> UploadDuration
		{
			get
			{
				return this._UploadDuration;
			}
			set
			{
				if ((this._UploadDuration != value))
				{
					this.OnUploadDurationChanging(value);
					this.SendPropertyChanging();
					this._UploadDuration = value;
					this.SendPropertyChanged("UploadDuration");
					this.OnUploadDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> UploadCompleted
		{
			get
			{
				return this._UploadCompleted;
			}
			set
			{
				if ((this._UploadCompleted != value))
				{
					this.OnUploadCompletedChanging(value);
					this.SendPropertyChanging();
					this._UploadCompleted = value;
					this.SendPropertyChanged("UploadCompleted");
					this.OnUploadCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Encoder", DbType="VarChar(50)")]
		public string Encoder
		{
			get
			{
				return this._Encoder;
			}
			set
			{
				if ((this._Encoder != value))
				{
					this.OnEncoderChanging(value);
					this.SendPropertyChanging();
					this._Encoder = value;
					this.SendPropertyChanged("Encoder");
					this.OnEncoderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncoderJobId", DbType="VarChar(50)")]
		public string EncoderJobId
		{
			get
			{
				return this._EncoderJobId;
			}
			set
			{
				if ((this._EncoderJobId != value))
				{
					this.OnEncoderJobIdChanging(value);
					this.SendPropertyChanging();
					this._EncoderJobId = value;
					this.SendPropertyChanged("EncoderJobId");
					this.OnEncoderJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncodingTriageRequested", DbType="DateTime")]
		public System.Nullable<System.DateTime> EncodingTriageRequested
		{
			get
			{
				return this._EncodingTriageRequested;
			}
			set
			{
				if ((this._EncodingTriageRequested != value))
				{
					this.OnEncodingTriageRequestedChanging(value);
					this.SendPropertyChanging();
					this._EncodingTriageRequested = value;
					this.SendPropertyChanged("EncodingTriageRequested");
					this.OnEncodingTriageRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncodingTriageStarted", DbType="DateTime")]
		public System.Nullable<System.DateTime> EncodingTriageStarted
		{
			get
			{
				return this._EncodingTriageStarted;
			}
			set
			{
				if ((this._EncodingTriageStarted != value))
				{
					this.OnEncodingTriageStartedChanging(value);
					this.SendPropertyChanging();
					this._EncodingTriageStarted = value;
					this.SendPropertyChanged("EncodingTriageStarted");
					this.OnEncodingTriageStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncodingRequested", DbType="DateTime")]
		public System.Nullable<System.DateTime> EncodingRequested
		{
			get
			{
				return this._EncodingRequested;
			}
			set
			{
				if ((this._EncodingRequested != value))
				{
					this.OnEncodingRequestedChanging(value);
					this.SendPropertyChanging();
					this._EncodingRequested = value;
					this.SendPropertyChanged("EncodingRequested");
					this.OnEncodingRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncodingCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> EncodingCompleted
		{
			get
			{
				return this._EncodingCompleted;
			}
			set
			{
				if ((this._EncodingCompleted != value))
				{
					this.OnEncodingCompletedChanging(value);
					this.SendPropertyChanging();
					this._EncodingCompleted = value;
					this.SendPropertyChanged("EncodingCompleted");
					this.OnEncodingCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorCode", DbType="Int")]
		public System.Nullable<int> ErrorCode
		{
			get
			{
				return this._ErrorCode;
			}
			set
			{
				if ((this._ErrorCode != value))
				{
					this.OnErrorCodeChanging(value);
					this.SendPropertyChanging();
					this._ErrorCode = value;
					this.SendPropertyChanged("ErrorCode");
					this.OnErrorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outputs", DbType="Int")]
		public System.Nullable<int> Outputs
		{
			get
			{
				return this._Outputs;
			}
			set
			{
				if ((this._Outputs != value))
				{
					this.OnOutputsChanging(value);
					this.SendPropertyChanging();
					this._Outputs = value;
					this.SendPropertyChanged("Outputs");
					this.OnOutputsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputFileFormat", DbType="VarChar(50)")]
		public string InputFileFormat
		{
			get
			{
				return this._InputFileFormat;
			}
			set
			{
				if ((this._InputFileFormat != value))
				{
					this.OnInputFileFormatChanging(value);
					this.SendPropertyChanging();
					this._InputFileFormat = value;
					this.SendPropertyChanged("InputFileFormat");
					this.OnInputFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputVideoFormat", DbType="VarChar(50)")]
		public string InputVideoFormat
		{
			get
			{
				return this._InputVideoFormat;
			}
			set
			{
				if ((this._InputVideoFormat != value))
				{
					this.OnInputVideoFormatChanging(value);
					this.SendPropertyChanging();
					this._InputVideoFormat = value;
					this.SendPropertyChanged("InputVideoFormat");
					this.OnInputVideoFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputFrameRate", DbType="Float")]
		public System.Nullable<double> InputFrameRate
		{
			get
			{
				return this._InputFrameRate;
			}
			set
			{
				if ((this._InputFrameRate != value))
				{
					this.OnInputFrameRateChanging(value);
					this.SendPropertyChanging();
					this._InputFrameRate = value;
					this.SendPropertyChanged("InputFrameRate");
					this.OnInputFrameRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputWidth", DbType="Int")]
		public System.Nullable<int> InputWidth
		{
			get
			{
				return this._InputWidth;
			}
			set
			{
				if ((this._InputWidth != value))
				{
					this.OnInputWidthChanging(value);
					this.SendPropertyChanging();
					this._InputWidth = value;
					this.SendPropertyChanged("InputWidth");
					this.OnInputWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputHeight", DbType="Int")]
		public System.Nullable<int> InputHeight
		{
			get
			{
				return this._InputHeight;
			}
			set
			{
				if ((this._InputHeight != value))
				{
					this.OnInputHeightChanging(value);
					this.SendPropertyChanging();
					this._InputHeight = value;
					this.SendPropertyChanged("InputHeight");
					this.OnInputHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputVideoBitRate", DbType="Int")]
		public System.Nullable<int> InputVideoBitRate
		{
			get
			{
				return this._InputVideoBitRate;
			}
			set
			{
				if ((this._InputVideoBitRate != value))
				{
					this.OnInputVideoBitRateChanging(value);
					this.SendPropertyChanging();
					this._InputVideoBitRate = value;
					this.SendPropertyChanged("InputVideoBitRate");
					this.OnInputVideoBitRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputAudioFormat", DbType="VarChar(50)")]
		public string InputAudioFormat
		{
			get
			{
				return this._InputAudioFormat;
			}
			set
			{
				if ((this._InputAudioFormat != value))
				{
					this.OnInputAudioFormatChanging(value);
					this.SendPropertyChanging();
					this._InputAudioFormat = value;
					this.SendPropertyChanged("InputAudioFormat");
					this.OnInputAudioFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputAudioBitRate", DbType="Int")]
		public System.Nullable<int> InputAudioBitRate
		{
			get
			{
				return this._InputAudioBitRate;
			}
			set
			{
				if ((this._InputAudioBitRate != value))
				{
					this.OnInputAudioBitRateChanging(value);
					this.SendPropertyChanging();
					this._InputAudioBitRate = value;
					this.SendPropertyChanged("InputAudioBitRate");
					this.OnInputAudioBitRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobCompleted
		{
			get
			{
				return this._JobCompleted;
			}
			set
			{
				if ((this._JobCompleted != value))
				{
					this.OnJobCompletedChanging(value);
					this.SendPropertyChanging();
					this._JobCompleted = value;
					this.SendPropertyChanged("JobCompleted");
					this.OnJobCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadStarted", DbType="DateTime")]
		public System.Nullable<System.DateTime> UploadStarted
		{
			get
			{
				return this._UploadStarted;
			}
			set
			{
				if ((this._UploadStarted != value))
				{
					this.OnUploadStartedChanging(value);
					this.SendPropertyChanging();
					this._UploadStarted = value;
					this.SendPropertyChanged("UploadStarted");
					this.OnUploadStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDuration", DbType="Float")]
		public System.Nullable<double> JobDuration
		{
			get
			{
				return this._JobDuration;
			}
			set
			{
				if ((this._JobDuration != value))
				{
					this.OnJobDurationChanging(value);
					this.SendPropertyChanging();
					this._JobDuration = value;
					this.SendPropertyChanged("JobDuration");
					this.OnJobDurationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeatureAccess")]
	public partial class FeatureAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public FeatureAccess()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[File]")]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private string _FileName;
		
		private string _OriginalFileName;
		
		private System.Nullable<int> _Bytes;
		
		private string _Location;
		
		private bool _DeletePhysicalFile;
		
		private System.Nullable<bool> _PhysicalFileDeleted;
		
		private System.Nullable<bool> _IsSample;
		
		private System.Nullable<bool> _IsComplimentary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnOriginalFileNameChanging(string value);
    partial void OnOriginalFileNameChanged();
    partial void OnBytesChanging(System.Nullable<int> value);
    partial void OnBytesChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnDeletePhysicalFileChanging(bool value);
    partial void OnDeletePhysicalFileChanged();
    partial void OnPhysicalFileDeletedChanging(System.Nullable<bool> value);
    partial void OnPhysicalFileDeletedChanged();
    partial void OnIsSampleChanging(System.Nullable<bool> value);
    partial void OnIsSampleChanged();
    partial void OnIsComplimentaryChanging(System.Nullable<bool> value);
    partial void OnIsComplimentaryChanged();
    #endregion
		
		public File()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(500)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalFileName", DbType="VarChar(500)")]
		public string OriginalFileName
		{
			get
			{
				return this._OriginalFileName;
			}
			set
			{
				if ((this._OriginalFileName != value))
				{
					this.OnOriginalFileNameChanging(value);
					this.SendPropertyChanging();
					this._OriginalFileName = value;
					this.SendPropertyChanged("OriginalFileName");
					this.OnOriginalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bytes", DbType="Int")]
		public System.Nullable<int> Bytes
		{
			get
			{
				return this._Bytes;
			}
			set
			{
				if ((this._Bytes != value))
				{
					this.OnBytesChanging(value);
					this.SendPropertyChanging();
					this._Bytes = value;
					this.SendPropertyChanged("Bytes");
					this.OnBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(500)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletePhysicalFile", DbType="Bit NOT NULL")]
		public bool DeletePhysicalFile
		{
			get
			{
				return this._DeletePhysicalFile;
			}
			set
			{
				if ((this._DeletePhysicalFile != value))
				{
					this.OnDeletePhysicalFileChanging(value);
					this.SendPropertyChanging();
					this._DeletePhysicalFile = value;
					this.SendPropertyChanged("DeletePhysicalFile");
					this.OnDeletePhysicalFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalFileDeleted", DbType="Bit")]
		public System.Nullable<bool> PhysicalFileDeleted
		{
			get
			{
				return this._PhysicalFileDeleted;
			}
			set
			{
				if ((this._PhysicalFileDeleted != value))
				{
					this.OnPhysicalFileDeletedChanging(value);
					this.SendPropertyChanging();
					this._PhysicalFileDeleted = value;
					this.SendPropertyChanged("PhysicalFileDeleted");
					this.OnPhysicalFileDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSample", DbType="Bit")]
		public System.Nullable<bool> IsSample
		{
			get
			{
				return this._IsSample;
			}
			set
			{
				if ((this._IsSample != value))
				{
					this.OnIsSampleChanging(value);
					this.SendPropertyChanging();
					this._IsSample = value;
					this.SendPropertyChanged("IsSample");
					this.OnIsSampleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComplimentary", DbType="Bit")]
		public System.Nullable<bool> IsComplimentary
		{
			get
			{
				return this._IsComplimentary;
			}
			set
			{
				if ((this._IsComplimentary != value))
				{
					this.OnIsComplimentaryChanging(value);
					this.SendPropertyChanging();
					this._IsComplimentary = value;
					this.SendPropertyChanged("IsComplimentary");
					this.OnIsComplimentaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileDownloadLog")]
	public partial class FileDownloadLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private System.DateTime _Date;
		
		private int _AccountId;
		
		private int _FileThingId;
		
		private string _FileThingType;
		
		private string _Url;
		
		private System.Nullable<int> _Bytes;
		
		private string _OriginalFileName;
		
		private bool _IsSampleFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnFileThingIdChanging(int value);
    partial void OnFileThingIdChanged();
    partial void OnFileThingTypeChanging(string value);
    partial void OnFileThingTypeChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnBytesChanging(System.Nullable<int> value);
    partial void OnBytesChanged();
    partial void OnOriginalFileNameChanging(string value);
    partial void OnOriginalFileNameChanged();
    partial void OnIsSampleFileChanging(bool value);
    partial void OnIsSampleFileChanged();
    #endregion
		
		public FileDownloadLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileThingId", DbType="Int NOT NULL")]
		public int FileThingId
		{
			get
			{
				return this._FileThingId;
			}
			set
			{
				if ((this._FileThingId != value))
				{
					this.OnFileThingIdChanging(value);
					this.SendPropertyChanging();
					this._FileThingId = value;
					this.SendPropertyChanged("FileThingId");
					this.OnFileThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileThingType", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string FileThingType
		{
			get
			{
				return this._FileThingType;
			}
			set
			{
				if ((this._FileThingType != value))
				{
					this.OnFileThingTypeChanging(value);
					this.SendPropertyChanging();
					this._FileThingType = value;
					this.SendPropertyChanged("FileThingType");
					this.OnFileThingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(500)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bytes", DbType="Int")]
		public System.Nullable<int> Bytes
		{
			get
			{
				return this._Bytes;
			}
			set
			{
				if ((this._Bytes != value))
				{
					this.OnBytesChanging(value);
					this.SendPropertyChanging();
					this._Bytes = value;
					this.SendPropertyChanged("Bytes");
					this.OnBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalFileName", DbType="VarChar(500)")]
		public string OriginalFileName
		{
			get
			{
				return this._OriginalFileName;
			}
			set
			{
				if ((this._OriginalFileName != value))
				{
					this.OnOriginalFileNameChanging(value);
					this.SendPropertyChanging();
					this._OriginalFileName = value;
					this.SendPropertyChanged("OriginalFileName");
					this.OnOriginalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSampleFile", DbType="Bit NOT NULL")]
		public bool IsSampleFile
		{
			get
			{
				return this._IsSampleFile;
			}
			set
			{
				if ((this._IsSampleFile != value))
				{
					this.OnIsSampleFileChanging(value);
					this.SendPropertyChanging();
					this._IsSampleFile = value;
					this.SendPropertyChanged("IsSampleFile");
					this.OnIsSampleFileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileUploadLog")]
	public partial class FileUploadLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private System.DateTime _Date;
		
		private int _AccountId;
		
		private int _FileThingId;
		
		private string _FileThingType;
		
		private string _Url;
		
		private System.Nullable<int> _Bytes;
		
		private string _OriginalFileName;
		
		private System.Nullable<double> _UploadDuration;
		
		private System.Nullable<System.DateTime> _UploadStarted;
		
		private System.Nullable<System.DateTime> _UploadCompleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnFileThingIdChanging(int value);
    partial void OnFileThingIdChanged();
    partial void OnFileThingTypeChanging(string value);
    partial void OnFileThingTypeChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnBytesChanging(System.Nullable<int> value);
    partial void OnBytesChanged();
    partial void OnOriginalFileNameChanging(string value);
    partial void OnOriginalFileNameChanged();
    partial void OnUploadDurationChanging(System.Nullable<double> value);
    partial void OnUploadDurationChanged();
    partial void OnUploadStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadStartedChanged();
    partial void OnUploadCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadCompletedChanged();
    #endregion
		
		public FileUploadLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileThingId", DbType="Int NOT NULL")]
		public int FileThingId
		{
			get
			{
				return this._FileThingId;
			}
			set
			{
				if ((this._FileThingId != value))
				{
					this.OnFileThingIdChanging(value);
					this.SendPropertyChanging();
					this._FileThingId = value;
					this.SendPropertyChanged("FileThingId");
					this.OnFileThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileThingType", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string FileThingType
		{
			get
			{
				return this._FileThingType;
			}
			set
			{
				if ((this._FileThingType != value))
				{
					this.OnFileThingTypeChanging(value);
					this.SendPropertyChanging();
					this._FileThingType = value;
					this.SendPropertyChanged("FileThingType");
					this.OnFileThingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(500)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bytes", DbType="Int")]
		public System.Nullable<int> Bytes
		{
			get
			{
				return this._Bytes;
			}
			set
			{
				if ((this._Bytes != value))
				{
					this.OnBytesChanging(value);
					this.SendPropertyChanging();
					this._Bytes = value;
					this.SendPropertyChanged("Bytes");
					this.OnBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalFileName", DbType="VarChar(500)")]
		public string OriginalFileName
		{
			get
			{
				return this._OriginalFileName;
			}
			set
			{
				if ((this._OriginalFileName != value))
				{
					this.OnOriginalFileNameChanging(value);
					this.SendPropertyChanging();
					this._OriginalFileName = value;
					this.SendPropertyChanged("OriginalFileName");
					this.OnOriginalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDuration", DbType="Float")]
		public System.Nullable<double> UploadDuration
		{
			get
			{
				return this._UploadDuration;
			}
			set
			{
				if ((this._UploadDuration != value))
				{
					this.OnUploadDurationChanging(value);
					this.SendPropertyChanging();
					this._UploadDuration = value;
					this.SendPropertyChanged("UploadDuration");
					this.OnUploadDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadStarted", DbType="DateTime")]
		public System.Nullable<System.DateTime> UploadStarted
		{
			get
			{
				return this._UploadStarted;
			}
			set
			{
				if ((this._UploadStarted != value))
				{
					this.OnUploadStartedChanging(value);
					this.SendPropertyChanging();
					this._UploadStarted = value;
					this.SendPropertyChanged("UploadStarted");
					this.OnUploadStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> UploadCompleted
		{
			get
			{
				return this._UploadCompleted;
			}
			set
			{
				if ((this._UploadCompleted != value))
				{
					this.OnUploadCompletedChanging(value);
					this.SendPropertyChanging();
					this._UploadCompleted = value;
					this.SendPropertyChanged("UploadCompleted");
					this.OnUploadCompletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Image")]
	public partial class Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private int _Width;
		
		private int _Height;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    #endregion
		
		public Image()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobLog")]
	public partial class JobLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.DateTime> _StartedOn;
		
		private System.Nullable<System.DateTime> _EndedOn;
		
		private string _JobType;
		
		private string _Status;
		
		private string _Error;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnStartedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnStartedOnChanged();
    partial void OnEndedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnEndedOnChanged();
    partial void OnJobTypeChanging(string value);
    partial void OnJobTypeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnErrorChanging(string value);
    partial void OnErrorChanged();
    #endregion
		
		public JobLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartedOn
		{
			get
			{
				return this._StartedOn;
			}
			set
			{
				if ((this._StartedOn != value))
				{
					this.OnStartedOnChanging(value);
					this.SendPropertyChanging();
					this._StartedOn = value;
					this.SendPropertyChanged("StartedOn");
					this.OnStartedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndedOn
		{
			get
			{
				return this._EndedOn;
			}
			set
			{
				if ((this._EndedOn != value))
				{
					this.OnEndedOnChanging(value);
					this.SendPropertyChanging();
					this._EndedOn = value;
					this.SendPropertyChanged("EndedOn");
					this.OnEndedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobType", DbType="VarChar(200)")]
		public string JobType
		{
			get
			{
				return this._JobType;
			}
			set
			{
				if ((this._JobType != value))
				{
					this.OnJobTypeChanging(value);
					this.SendPropertyChanging();
					this._JobType = value;
					this.SendPropertyChanged("JobType");
					this.OnJobTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error", DbType="VarChar(500)")]
		public string Error
		{
			get
			{
				return this._Error;
			}
			set
			{
				if ((this._Error != value))
				{
					this.OnErrorChanging(value);
					this.SendPropertyChanging();
					this._Error = value;
					this.SendPropertyChanged("Error");
					this.OnErrorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Membership")]
	public partial class Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private int _UserId;
		
		private System.Nullable<int> _TargetId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnTargetIdChanging(System.Nullable<int> value);
    partial void OnTargetIdChanged();
    #endregion
		
		public Membership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetId", DbType="Int")]
		public System.Nullable<int> TargetId
		{
			get
			{
				return this._TargetId;
			}
			set
			{
				if ((this._TargetId != value))
				{
					this.OnTargetIdChanging(value);
					this.SendPropertyChanging();
					this._TargetId = value;
					this.SendPropertyChanged("TargetId");
					this.OnTargetIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembershipRequest")]
	public partial class MembershipRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private int _UserId;
		
		private string _Note;
		
		private System.Nullable<bool> _IsInvitation;
		
		private string _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnIsInvitationChanging(System.Nullable<bool> value);
    partial void OnIsInvitationChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public MembershipRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvitation", DbType="Bit")]
		public System.Nullable<bool> IsInvitation
		{
			get
			{
				return this._IsInvitation;
			}
			set
			{
				if ((this._IsInvitation != value))
				{
					this.OnIsInvitationChanging(value);
					this.SendPropertyChanging();
					this._IsInvitation = value;
					this.SendPropertyChanged("IsInvitation");
					this.OnIsInvitationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="VarChar(50)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembershipRequestAutoReponse")]
	public partial class MembershipRequestAutoReponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserRequestedBy;
		
		private int _UserId;
		
		private bool _Accept;
		
		private System.Nullable<bool> _IsInvitation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserRequestedByChanging(int value);
    partial void OnUserRequestedByChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnAcceptChanging(bool value);
    partial void OnAcceptChanged();
    partial void OnIsInvitationChanging(System.Nullable<bool> value);
    partial void OnIsInvitationChanged();
    #endregion
		
		public MembershipRequestAutoReponse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRequestedBy", DbType="Int NOT NULL")]
		public int UserRequestedBy
		{
			get
			{
				return this._UserRequestedBy;
			}
			set
			{
				if ((this._UserRequestedBy != value))
				{
					this.OnUserRequestedByChanging(value);
					this.SendPropertyChanging();
					this._UserRequestedBy = value;
					this.SendPropertyChanged("UserRequestedBy");
					this.OnUserRequestedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accept", DbType="Bit NOT NULL")]
		public bool Accept
		{
			get
			{
				return this._Accept;
			}
			set
			{
				if ((this._Accept != value))
				{
					this.OnAcceptChanging(value);
					this.SendPropertyChanging();
					this._Accept = value;
					this.SendPropertyChanged("Accept");
					this.OnAcceptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvitation", DbType="Bit")]
		public System.Nullable<bool> IsInvitation
		{
			get
			{
				return this._IsInvitation;
			}
			set
			{
				if ((this._IsInvitation != value))
				{
					this.OnIsInvitationChanging(value);
					this.SendPropertyChanging();
					this._IsInvitation = value;
					this.SendPropertyChanged("IsInvitation");
					this.OnIsInvitationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OutgoingEmailLinkClickLog")]
	public partial class OutgoingEmailLinkClickLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.Guid> _MessageId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMessageIdChanging(System.Nullable<System.Guid> value);
    partial void OnMessageIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public OutgoingEmailLinkClickLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(1000)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OutgoingEmailLog")]
	public partial class OutgoingEmailLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _ToAddress;
		
		private System.Nullable<int> _ToUserId;
		
		private System.Nullable<System.Guid> _JobId;
		
		private string _Template;
		
		private System.Nullable<System.DateTime> _SentOn;
		
		private System.Nullable<System.DateTime> _SendAttemptedOn;
		
		private string _Error;
		
		private string _Provider;
		
		private System.Nullable<bool> _IncludedTrackingImage;
		
		private System.Nullable<int> _OpenCount;
		
		private System.Nullable<int> _LinkClickCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnToAddressChanging(string value);
    partial void OnToAddressChanged();
    partial void OnToUserIdChanging(System.Nullable<int> value);
    partial void OnToUserIdChanged();
    partial void OnJobIdChanging(System.Nullable<System.Guid> value);
    partial void OnJobIdChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    partial void OnSentOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSentOnChanged();
    partial void OnSendAttemptedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSendAttemptedOnChanged();
    partial void OnErrorChanging(string value);
    partial void OnErrorChanged();
    partial void OnProviderChanging(string value);
    partial void OnProviderChanged();
    partial void OnIncludedTrackingImageChanging(System.Nullable<bool> value);
    partial void OnIncludedTrackingImageChanged();
    partial void OnOpenCountChanging(System.Nullable<int> value);
    partial void OnOpenCountChanged();
    partial void OnLinkClickCountChanging(System.Nullable<int> value);
    partial void OnLinkClickCountChanged();
    #endregion
		
		public OutgoingEmailLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAddress", DbType="VarChar(1000)")]
		public string ToAddress
		{
			get
			{
				return this._ToAddress;
			}
			set
			{
				if ((this._ToAddress != value))
				{
					this.OnToAddressChanging(value);
					this.SendPropertyChanging();
					this._ToAddress = value;
					this.SendPropertyChanged("ToAddress");
					this.OnToAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUserId", DbType="Int")]
		public System.Nullable<int> ToUserId
		{
			get
			{
				return this._ToUserId;
			}
			set
			{
				if ((this._ToUserId != value))
				{
					this.OnToUserIdChanging(value);
					this.SendPropertyChanging();
					this._ToUserId = value;
					this.SendPropertyChanged("ToUserId");
					this.OnToUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="VarChar(500)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> SentOn
		{
			get
			{
				return this._SentOn;
			}
			set
			{
				if ((this._SentOn != value))
				{
					this.OnSentOnChanging(value);
					this.SendPropertyChanging();
					this._SentOn = value;
					this.SendPropertyChanged("SentOn");
					this.OnSentOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendAttemptedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendAttemptedOn
		{
			get
			{
				return this._SendAttemptedOn;
			}
			set
			{
				if ((this._SendAttemptedOn != value))
				{
					this.OnSendAttemptedOnChanging(value);
					this.SendPropertyChanging();
					this._SendAttemptedOn = value;
					this.SendPropertyChanged("SendAttemptedOn");
					this.OnSendAttemptedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error", DbType="VarChar(500)")]
		public string Error
		{
			get
			{
				return this._Error;
			}
			set
			{
				if ((this._Error != value))
				{
					this.OnErrorChanging(value);
					this.SendPropertyChanging();
					this._Error = value;
					this.SendPropertyChanged("Error");
					this.OnErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="VarChar(50)")]
		public string Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludedTrackingImage", DbType="Bit")]
		public System.Nullable<bool> IncludedTrackingImage
		{
			get
			{
				return this._IncludedTrackingImage;
			}
			set
			{
				if ((this._IncludedTrackingImage != value))
				{
					this.OnIncludedTrackingImageChanging(value);
					this.SendPropertyChanging();
					this._IncludedTrackingImage = value;
					this.SendPropertyChanged("IncludedTrackingImage");
					this.OnIncludedTrackingImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenCount", DbType="Int")]
		public System.Nullable<int> OpenCount
		{
			get
			{
				return this._OpenCount;
			}
			set
			{
				if ((this._OpenCount != value))
				{
					this.OnOpenCountChanging(value);
					this.SendPropertyChanging();
					this._OpenCount = value;
					this.SendPropertyChanged("OpenCount");
					this.OnOpenCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkClickCount", DbType="Int")]
		public System.Nullable<int> LinkClickCount
		{
			get
			{
				return this._LinkClickCount;
			}
			set
			{
				if ((this._LinkClickCount != value))
				{
					this.OnLinkClickCountChanging(value);
					this.SendPropertyChanging();
					this._LinkClickCount = value;
					this.SendPropertyChanged("LinkClickCount");
					this.OnLinkClickCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OutgoingEmailOpenLog")]
	public partial class OutgoingEmailOpenLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.Guid> _MessageId;
		
		private System.Nullable<System.DateTime> _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMessageIdChanging(System.Nullable<System.Guid> value);
    partial void OnMessageIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public OutgoingEmailOpenLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permission")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ApplicationId;
		
		private string _RoleName;
		
		private string _ContainerThingType;
		
		private string _TargetThingType;
		
		private string _Action;
		
		private string _Condition;
		
		private string _ConditionContext;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicationIdChanging(string value);
    partial void OnApplicationIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnContainerThingTypeChanging(string value);
    partial void OnContainerThingTypeChanged();
    partial void OnTargetThingTypeChanging(string value);
    partial void OnTargetThingTypeChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    partial void OnConditionContextChanging(string value);
    partial void OnConditionContextChanged();
    #endregion
		
		public Permission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="VarChar(10)")]
		public string ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(20)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerThingType", DbType="VarChar(30)")]
		public string ContainerThingType
		{
			get
			{
				return this._ContainerThingType;
			}
			set
			{
				if ((this._ContainerThingType != value))
				{
					this.OnContainerThingTypeChanging(value);
					this.SendPropertyChanging();
					this._ContainerThingType = value;
					this.SendPropertyChanged("ContainerThingType");
					this.OnContainerThingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetThingType", DbType="VarChar(30)")]
		public string TargetThingType
		{
			get
			{
				return this._TargetThingType;
			}
			set
			{
				if ((this._TargetThingType != value))
				{
					this.OnTargetThingTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetThingType = value;
					this.SendPropertyChanged("TargetThingType");
					this.OnTargetThingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(20)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="VarChar(15)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionContext", DbType="VarChar(10)")]
		public string ConditionContext
		{
			get
			{
				return this._ConditionContext;
			}
			set
			{
				if ((this._ConditionContext != value))
				{
					this.OnConditionContextChanging(value);
					this.SendPropertyChanging();
					this._ConditionContext = value;
					this.SendPropertyChanged("ConditionContext");
					this.OnConditionContextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private string _Title;
		
		private string _FilesLocation;
		
		private System.Nullable<int> _LogoImageId;
		
		private System.Nullable<bool> _IsSample;
		
		private System.Nullable<bool> _IsComplimentary;
		
		private string _SemiAnonymousPassword;
		
		private System.Nullable<bool> _SemiAnonymousUserCanComment;
		
		private string _VanityUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFilesLocationChanging(string value);
    partial void OnFilesLocationChanged();
    partial void OnLogoImageIdChanging(System.Nullable<int> value);
    partial void OnLogoImageIdChanged();
    partial void OnIsSampleChanging(System.Nullable<bool> value);
    partial void OnIsSampleChanged();
    partial void OnIsComplimentaryChanging(System.Nullable<bool> value);
    partial void OnIsComplimentaryChanged();
    partial void OnSemiAnonymousPasswordChanging(string value);
    partial void OnSemiAnonymousPasswordChanged();
    partial void OnSemiAnonymousUserCanCommentChanging(System.Nullable<bool> value);
    partial void OnSemiAnonymousUserCanCommentChanged();
    partial void OnVanityUrlChanging(string value);
    partial void OnVanityUrlChanged();
    #endregion
		
		public Project()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(500)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilesLocation", DbType="VarChar(80)")]
		public string FilesLocation
		{
			get
			{
				return this._FilesLocation;
			}
			set
			{
				if ((this._FilesLocation != value))
				{
					this.OnFilesLocationChanging(value);
					this.SendPropertyChanging();
					this._FilesLocation = value;
					this.SendPropertyChanged("FilesLocation");
					this.OnFilesLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoImageId", DbType="Int")]
		public System.Nullable<int> LogoImageId
		{
			get
			{
				return this._LogoImageId;
			}
			set
			{
				if ((this._LogoImageId != value))
				{
					this.OnLogoImageIdChanging(value);
					this.SendPropertyChanging();
					this._LogoImageId = value;
					this.SendPropertyChanged("LogoImageId");
					this.OnLogoImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSample", DbType="Bit")]
		public System.Nullable<bool> IsSample
		{
			get
			{
				return this._IsSample;
			}
			set
			{
				if ((this._IsSample != value))
				{
					this.OnIsSampleChanging(value);
					this.SendPropertyChanging();
					this._IsSample = value;
					this.SendPropertyChanged("IsSample");
					this.OnIsSampleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComplimentary", DbType="Bit")]
		public System.Nullable<bool> IsComplimentary
		{
			get
			{
				return this._IsComplimentary;
			}
			set
			{
				if ((this._IsComplimentary != value))
				{
					this.OnIsComplimentaryChanging(value);
					this.SendPropertyChanging();
					this._IsComplimentary = value;
					this.SendPropertyChanged("IsComplimentary");
					this.OnIsComplimentaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SemiAnonymousPassword", DbType="VarChar(1000)")]
		public string SemiAnonymousPassword
		{
			get
			{
				return this._SemiAnonymousPassword;
			}
			set
			{
				if ((this._SemiAnonymousPassword != value))
				{
					this.OnSemiAnonymousPasswordChanging(value);
					this.SendPropertyChanging();
					this._SemiAnonymousPassword = value;
					this.SendPropertyChanged("SemiAnonymousPassword");
					this.OnSemiAnonymousPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SemiAnonymousUserCanComment", DbType="Bit")]
		public System.Nullable<bool> SemiAnonymousUserCanComment
		{
			get
			{
				return this._SemiAnonymousUserCanComment;
			}
			set
			{
				if ((this._SemiAnonymousUserCanComment != value))
				{
					this.OnSemiAnonymousUserCanCommentChanging(value);
					this.SendPropertyChanging();
					this._SemiAnonymousUserCanComment = value;
					this.SendPropertyChanged("SemiAnonymousUserCanComment");
					this.OnSemiAnonymousUserCanCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VanityUrl", DbType="VarChar(500)")]
		public string VanityUrl
		{
			get
			{
				return this._VanityUrl;
			}
			set
			{
				if ((this._VanityUrl != value))
				{
					this.OnVanityUrlChanging(value);
					this.SendPropertyChanging();
					this._VanityUrl = value;
					this.SendPropertyChanged("VanityUrl");
					this.OnVanityUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecurlyWebHookLog")]
	public partial class RecurlyWebHookLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _AccountId;
		
		private string _Type;
		
		private System.Nullable<System.DateTime> _ReceivedOn;
		
		private System.Nullable<System.Guid> _ServerRequestId;
		
		private bool _Processed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnReceivedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnReceivedOnChanged();
    partial void OnServerRequestIdChanging(System.Nullable<System.Guid> value);
    partial void OnServerRequestIdChanged();
    partial void OnProcessedChanging(bool value);
    partial void OnProcessedChanged();
    #endregion
		
		public RecurlyWebHookLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(200)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceivedOn
		{
			get
			{
				return this._ReceivedOn;
			}
			set
			{
				if ((this._ReceivedOn != value))
				{
					this.OnReceivedOnChanging(value);
					this.SendPropertyChanging();
					this._ReceivedOn = value;
					this.SendPropertyChanged("ReceivedOn");
					this.OnReceivedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerRequestId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServerRequestId
		{
			get
			{
				return this._ServerRequestId;
			}
			set
			{
				if ((this._ServerRequestId != value))
				{
					this.OnServerRequestIdChanging(value);
					this.SendPropertyChanging();
					this._ServerRequestId = value;
					this.SendPropertyChanged("ServerRequestId");
					this.OnServerRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Processed", DbType="Bit NOT NULL")]
		public bool Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnProcessedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("Processed");
					this.OnProcessedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServerRequestLog")]
	public partial class ServerRequestLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _RequestedOn;
		
		private bool _SavedRequest;
		
		private bool _SavedResponse;
		
		private string _UrlLocalPath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnRequestedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestedOnChanged();
    partial void OnSavedRequestChanging(bool value);
    partial void OnSavedRequestChanged();
    partial void OnSavedResponseChanging(bool value);
    partial void OnSavedResponseChanged();
    partial void OnUrlLocalPathChanging(string value);
    partial void OnUrlLocalPathChanged();
    #endregion
		
		public ServerRequestLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestedOn
		{
			get
			{
				return this._RequestedOn;
			}
			set
			{
				if ((this._RequestedOn != value))
				{
					this.OnRequestedOnChanging(value);
					this.SendPropertyChanging();
					this._RequestedOn = value;
					this.SendPropertyChanged("RequestedOn");
					this.OnRequestedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavedRequest", DbType="Bit NOT NULL")]
		public bool SavedRequest
		{
			get
			{
				return this._SavedRequest;
			}
			set
			{
				if ((this._SavedRequest != value))
				{
					this.OnSavedRequestChanging(value);
					this.SendPropertyChanging();
					this._SavedRequest = value;
					this.SendPropertyChanged("SavedRequest");
					this.OnSavedRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavedResponse", DbType="Bit NOT NULL")]
		public bool SavedResponse
		{
			get
			{
				return this._SavedResponse;
			}
			set
			{
				if ((this._SavedResponse != value))
				{
					this.OnSavedResponseChanging(value);
					this.SendPropertyChanging();
					this._SavedResponse = value;
					this.SendPropertyChanged("SavedResponse");
					this.OnSavedResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlLocalPath", DbType="VarChar(150)")]
		public string UrlLocalPath
		{
			get
			{
				return this._UrlLocalPath;
			}
			set
			{
				if ((this._UrlLocalPath != value))
				{
					this.OnUrlLocalPathChanging(value);
					this.SendPropertyChanging();
					this._UrlLocalPath = value;
					this.SendPropertyChanged("UrlLocalPath");
					this.OnUrlLocalPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setting")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private string _ApplicationId;
		
		private string _Key;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnApplicationIdChanging(string value);
    partial void OnApplicationIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(1000)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Thing")]
	public partial class Thing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Type;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<int> _ParentId;
		
		private System.Nullable<int> _ContainerId;
		
		private bool _IsContainer;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<System.DateTime> _DeletedOn;
		
		private System.Nullable<int> _LinkedThingsId;
		
		private System.Nullable<int> _OwnerUserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnContainerIdChanging(System.Nullable<int> value);
    partial void OnContainerIdChanged();
    partial void OnIsContainerChanging(bool value);
    partial void OnIsContainerChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnDeletedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedOnChanged();
    partial void OnLinkedThingsIdChanging(System.Nullable<int> value);
    partial void OnLinkedThingsIdChanged();
    partial void OnOwnerUserIdChanging(System.Nullable<int> value);
    partial void OnOwnerUserIdChanged();
    #endregion
		
		public Thing()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerId", DbType="Int")]
		public System.Nullable<int> ContainerId
		{
			get
			{
				return this._ContainerId;
			}
			set
			{
				if ((this._ContainerId != value))
				{
					this.OnContainerIdChanging(value);
					this.SendPropertyChanging();
					this._ContainerId = value;
					this.SendPropertyChanged("ContainerId");
					this.OnContainerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContainer", DbType="Bit NOT NULL")]
		public bool IsContainer
		{
			get
			{
				return this._IsContainer;
			}
			set
			{
				if ((this._IsContainer != value))
				{
					this.OnIsContainerChanging(value);
					this.SendPropertyChanging();
					this._IsContainer = value;
					this.SendPropertyChanged("IsContainer");
					this.OnIsContainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedOn
		{
			get
			{
				return this._DeletedOn;
			}
			set
			{
				if ((this._DeletedOn != value))
				{
					this.OnDeletedOnChanging(value);
					this.SendPropertyChanging();
					this._DeletedOn = value;
					this.SendPropertyChanged("DeletedOn");
					this.OnDeletedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedThingsId", DbType="Int")]
		public System.Nullable<int> LinkedThingsId
		{
			get
			{
				return this._LinkedThingsId;
			}
			set
			{
				if ((this._LinkedThingsId != value))
				{
					this.OnLinkedThingsIdChanging(value);
					this.SendPropertyChanging();
					this._LinkedThingsId = value;
					this.SendPropertyChanged("LinkedThingsId");
					this.OnLinkedThingsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerUserId", DbType="Int")]
		public System.Nullable<int> OwnerUserId
		{
			get
			{
				return this._OwnerUserId;
			}
			set
			{
				if ((this._OwnerUserId != value))
				{
					this.OnOwnerUserIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerUserId = value;
					this.SendPropertyChanged("OwnerUserId");
					this.OnOwnerUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThingAccessLog")]
	public partial class ThingAccessLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private System.DateTime _Date;
		
		private int _ThingId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    #endregion
		
		public ThingAccessLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL")]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private string _Password;
		
		private string _PasswordSalt;
		
		private string _Email;
		
		private string _Name;
		
		private string _PasswordResetKey;
		
		private bool _IsVerified;
		
		private string _VerificationKey;
		
		private System.Nullable<int> _InvitedByUserId;
		
		private System.Nullable<int> _TimezoneOffset;
		
		private string _SignupSource;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Company;
		
		private System.Nullable<System.DateTime> _ConvertedFromBetaOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordResetKeyChanging(string value);
    partial void OnPasswordResetKeyChanged();
    partial void OnIsVerifiedChanging(bool value);
    partial void OnIsVerifiedChanged();
    partial void OnVerificationKeyChanging(string value);
    partial void OnVerificationKeyChanged();
    partial void OnInvitedByUserIdChanging(System.Nullable<int> value);
    partial void OnInvitedByUserIdChanged();
    partial void OnTimezoneOffsetChanging(System.Nullable<int> value);
    partial void OnTimezoneOffsetChanged();
    partial void OnSignupSourceChanging(string value);
    partial void OnSignupSourceChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnConvertedFromBetaOnChanging(System.Nullable<System.DateTime> value);
    partial void OnConvertedFromBetaOnChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="VarChar(128)")]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordResetKey", DbType="VarChar(10)")]
		public string PasswordResetKey
		{
			get
			{
				return this._PasswordResetKey;
			}
			set
			{
				if ((this._PasswordResetKey != value))
				{
					this.OnPasswordResetKeyChanging(value);
					this.SendPropertyChanging();
					this._PasswordResetKey = value;
					this.SendPropertyChanged("PasswordResetKey");
					this.OnPasswordResetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVerified", DbType="Bit NOT NULL")]
		public bool IsVerified
		{
			get
			{
				return this._IsVerified;
			}
			set
			{
				if ((this._IsVerified != value))
				{
					this.OnIsVerifiedChanging(value);
					this.SendPropertyChanging();
					this._IsVerified = value;
					this.SendPropertyChanged("IsVerified");
					this.OnIsVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationKey", DbType="VarChar(10)")]
		public string VerificationKey
		{
			get
			{
				return this._VerificationKey;
			}
			set
			{
				if ((this._VerificationKey != value))
				{
					this.OnVerificationKeyChanging(value);
					this.SendPropertyChanging();
					this._VerificationKey = value;
					this.SendPropertyChanged("VerificationKey");
					this.OnVerificationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvitedByUserId", DbType="Int")]
		public System.Nullable<int> InvitedByUserId
		{
			get
			{
				return this._InvitedByUserId;
			}
			set
			{
				if ((this._InvitedByUserId != value))
				{
					this.OnInvitedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._InvitedByUserId = value;
					this.SendPropertyChanged("InvitedByUserId");
					this.OnInvitedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimezoneOffset", DbType="Int")]
		public System.Nullable<int> TimezoneOffset
		{
			get
			{
				return this._TimezoneOffset;
			}
			set
			{
				if ((this._TimezoneOffset != value))
				{
					this.OnTimezoneOffsetChanging(value);
					this.SendPropertyChanging();
					this._TimezoneOffset = value;
					this.SendPropertyChanged("TimezoneOffset");
					this.OnTimezoneOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignupSource", DbType="VarChar(1000)")]
		public string SignupSource
		{
			get
			{
				return this._SignupSource;
			}
			set
			{
				if ((this._SignupSource != value))
				{
					this.OnSignupSourceChanging(value);
					this.SendPropertyChanging();
					this._SignupSource = value;
					this.SendPropertyChanged("SignupSource");
					this.OnSignupSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(100)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvertedFromBetaOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConvertedFromBetaOn
		{
			get
			{
				return this._ConvertedFromBetaOn;
			}
			set
			{
				if ((this._ConvertedFromBetaOn != value))
				{
					this.OnConvertedFromBetaOnChanging(value);
					this.SendPropertyChanging();
					this._ConvertedFromBetaOn = value;
					this.SendPropertyChanged("ConvertedFromBetaOn");
					this.OnConvertedFromBetaOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VideoComment")]
	public partial class VideoComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private double _StartTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnStartTimeChanging(double value);
    partial void OnStartTimeChanged();
    #endregion
		
		public VideoComment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Float NOT NULL")]
		public double StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VideoStream")]
	public partial class VideoStream : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private System.Nullable<int> _VideoBitRate;
		
		private System.Nullable<int> _AudioBitRate;
		
		private string _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnVideoBitRateChanging(System.Nullable<int> value);
    partial void OnVideoBitRateChanged();
    partial void OnAudioBitRateChanging(System.Nullable<int> value);
    partial void OnAudioBitRateChanged();
    partial void OnProfileChanging(string value);
    partial void OnProfileChanged();
    #endregion
		
		public VideoStream()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoBitRate", DbType="Int")]
		public System.Nullable<int> VideoBitRate
		{
			get
			{
				return this._VideoBitRate;
			}
			set
			{
				if ((this._VideoBitRate != value))
				{
					this.OnVideoBitRateChanging(value);
					this.SendPropertyChanging();
					this._VideoBitRate = value;
					this.SendPropertyChanged("VideoBitRate");
					this.OnVideoBitRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioBitRate", DbType="Int")]
		public System.Nullable<int> AudioBitRate
		{
			get
			{
				return this._AudioBitRate;
			}
			set
			{
				if ((this._AudioBitRate != value))
				{
					this.OnAudioBitRateChanging(value);
					this.SendPropertyChanging();
					this._AudioBitRate = value;
					this.SendPropertyChanged("AudioBitRate");
					this.OnAudioBitRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profile", DbType="VarChar(20)")]
		public string Profile
		{
			get
			{
				return this._Profile;
			}
			set
			{
				if ((this._Profile != value))
				{
					this.OnProfileChanging(value);
					this.SendPropertyChanging();
					this._Profile = value;
					this.SendPropertyChanged("Profile");
					this.OnProfileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VideoThumbnail")]
	public partial class VideoThumbnail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private double _Time;
		
		private int _Width;
		
		private int _Height;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnTimeChanging(double value);
    partial void OnTimeChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    #endregion
		
		public VideoThumbnail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Float NOT NULL")]
		public double Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VideoWatchLog")]
	public partial class VideoWatchLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private System.DateTime _Date;
		
		private int _AccountId;
		
		private int _VideoId;
		
		private int _VideoStreamId;
		
		private System.Nullable<int> _ProductionId;
		
		private string _Url;
		
		private bool _IsSample;
		
		private string _Profile;
		
		private System.Nullable<double> _Duration;
		
		private System.Nullable<int> _Bytes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnVideoIdChanging(int value);
    partial void OnVideoIdChanged();
    partial void OnVideoStreamIdChanging(int value);
    partial void OnVideoStreamIdChanged();
    partial void OnProductionIdChanging(System.Nullable<int> value);
    partial void OnProductionIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnIsSampleChanging(bool value);
    partial void OnIsSampleChanged();
    partial void OnProfileChanging(string value);
    partial void OnProfileChanged();
    partial void OnDurationChanging(System.Nullable<double> value);
    partial void OnDurationChanged();
    partial void OnBytesChanging(System.Nullable<int> value);
    partial void OnBytesChanged();
    #endregion
		
		public VideoWatchLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoId", DbType="Int NOT NULL")]
		public int VideoId
		{
			get
			{
				return this._VideoId;
			}
			set
			{
				if ((this._VideoId != value))
				{
					this.OnVideoIdChanging(value);
					this.SendPropertyChanging();
					this._VideoId = value;
					this.SendPropertyChanged("VideoId");
					this.OnVideoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoStreamId", DbType="Int NOT NULL")]
		public int VideoStreamId
		{
			get
			{
				return this._VideoStreamId;
			}
			set
			{
				if ((this._VideoStreamId != value))
				{
					this.OnVideoStreamIdChanging(value);
					this.SendPropertyChanging();
					this._VideoStreamId = value;
					this.SendPropertyChanged("VideoStreamId");
					this.OnVideoStreamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionId", DbType="Int")]
		public System.Nullable<int> ProductionId
		{
			get
			{
				return this._ProductionId;
			}
			set
			{
				if ((this._ProductionId != value))
				{
					this.OnProductionIdChanging(value);
					this.SendPropertyChanging();
					this._ProductionId = value;
					this.SendPropertyChanged("ProductionId");
					this.OnProductionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSample", DbType="Bit NOT NULL")]
		public bool IsSample
		{
			get
			{
				return this._IsSample;
			}
			set
			{
				if ((this._IsSample != value))
				{
					this.OnIsSampleChanging(value);
					this.SendPropertyChanging();
					this._IsSample = value;
					this.SendPropertyChanged("IsSample");
					this.OnIsSampleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profile", DbType="VarChar(50)")]
		public string Profile
		{
			get
			{
				return this._Profile;
			}
			set
			{
				if ((this._Profile != value))
				{
					this.OnProfileChanging(value);
					this.SendPropertyChanging();
					this._Profile = value;
					this.SendPropertyChanged("Profile");
					this.OnProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Float")]
		public System.Nullable<double> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bytes", DbType="Int")]
		public System.Nullable<int> Bytes
		{
			get
			{
				return this._Bytes;
			}
			set
			{
				if ((this._Bytes != value))
				{
					this.OnBytesChanging(value);
					this.SendPropertyChanging();
					this._Bytes = value;
					this.SendPropertyChanged("Bytes");
					this.OnBytesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewPrompt")]
	public partial class ViewPrompt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private string _View;
		
		private System.Nullable<System.DateTime> _ExpiresOn;
		
		private System.Nullable<System.DateTime> _StartsOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnViewChanging(string value);
    partial void OnViewChanged();
    partial void OnExpiresOnChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiresOnChanged();
    partial void OnStartsOnChanging(System.Nullable<System.DateTime> value);
    partial void OnStartsOnChanged();
    #endregion
		
		public ViewPrompt()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[View]", Storage="_View", DbType="VarChar(500)")]
		public string View
		{
			get
			{
				return this._View;
			}
			set
			{
				if ((this._View != value))
				{
					this.OnViewChanging(value);
					this.SendPropertyChanging();
					this._View = value;
					this.SendPropertyChanged("View");
					this.OnViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiresOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiresOn
		{
			get
			{
				return this._ExpiresOn;
			}
			set
			{
				if ((this._ExpiresOn != value))
				{
					this.OnExpiresOnChanging(value);
					this.SendPropertyChanging();
					this._ExpiresOn = value;
					this.SendPropertyChanged("ExpiresOn");
					this.OnExpiresOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartsOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartsOn
		{
			get
			{
				return this._StartsOn;
			}
			set
			{
				if ((this._StartsOn != value))
				{
					this.OnStartsOnChanging(value);
					this.SendPropertyChanging();
					this._StartsOn = value;
					this.SendPropertyChanged("StartsOn");
					this.OnStartsOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SemiAnonymousUser")]
	public partial class SemiAnonymousUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<int> _TargetId;
		
		private string _UserName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnTargetIdChanging(System.Nullable<int> value);
    partial void OnTargetIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public SemiAnonymousUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetId", DbType="Int")]
		public System.Nullable<int> TargetId
		{
			get
			{
				return this._TargetId;
			}
			set
			{
				if ((this._TargetId != value))
				{
					this.OnTargetIdChanging(value);
					this.SendPropertyChanging();
					this._TargetId = value;
					this.SendPropertyChanged("TargetId");
					this.OnTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(500)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Video")]
	public partial class Video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThingId;
		
		private int _OriginalFileId;
		
		private string _Title;
		
		private System.Nullable<double> _Duration;
		
		private System.Nullable<bool> _IsSourceDownloadable;
		
		private System.Nullable<bool> _IsSample;
		
		private System.Nullable<bool> _IsComplimentary;
		
		private string _GuestPassword;
		
		private System.Nullable<bool> _GuestsCanComment;
		
		private string _CustomUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThingIdChanging(int value);
    partial void OnThingIdChanged();
    partial void OnOriginalFileIdChanging(int value);
    partial void OnOriginalFileIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDurationChanging(System.Nullable<double> value);
    partial void OnDurationChanged();
    partial void OnIsSourceDownloadableChanging(System.Nullable<bool> value);
    partial void OnIsSourceDownloadableChanged();
    partial void OnIsSampleChanging(System.Nullable<bool> value);
    partial void OnIsSampleChanged();
    partial void OnIsComplimentaryChanging(System.Nullable<bool> value);
    partial void OnIsComplimentaryChanged();
    partial void OnGuestPasswordChanging(string value);
    partial void OnGuestPasswordChanged();
    partial void OnGuestsCanCommentChanging(System.Nullable<bool> value);
    partial void OnGuestsCanCommentChanged();
    partial void OnCustomUrlChanging(string value);
    partial void OnCustomUrlChanged();
    #endregion
		
		public Video()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThingId
		{
			get
			{
				return this._ThingId;
			}
			set
			{
				if ((this._ThingId != value))
				{
					this.OnThingIdChanging(value);
					this.SendPropertyChanging();
					this._ThingId = value;
					this.SendPropertyChanged("ThingId");
					this.OnThingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalFileId", DbType="Int NOT NULL")]
		public int OriginalFileId
		{
			get
			{
				return this._OriginalFileId;
			}
			set
			{
				if ((this._OriginalFileId != value))
				{
					this.OnOriginalFileIdChanging(value);
					this.SendPropertyChanging();
					this._OriginalFileId = value;
					this.SendPropertyChanged("OriginalFileId");
					this.OnOriginalFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Float")]
		public System.Nullable<double> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSourceDownloadable", DbType="Bit")]
		public System.Nullable<bool> IsSourceDownloadable
		{
			get
			{
				return this._IsSourceDownloadable;
			}
			set
			{
				if ((this._IsSourceDownloadable != value))
				{
					this.OnIsSourceDownloadableChanging(value);
					this.SendPropertyChanging();
					this._IsSourceDownloadable = value;
					this.SendPropertyChanged("IsSourceDownloadable");
					this.OnIsSourceDownloadableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSample", DbType="Bit")]
		public System.Nullable<bool> IsSample
		{
			get
			{
				return this._IsSample;
			}
			set
			{
				if ((this._IsSample != value))
				{
					this.OnIsSampleChanging(value);
					this.SendPropertyChanging();
					this._IsSample = value;
					this.SendPropertyChanged("IsSample");
					this.OnIsSampleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComplimentary", DbType="Bit")]
		public System.Nullable<bool> IsComplimentary
		{
			get
			{
				return this._IsComplimentary;
			}
			set
			{
				if ((this._IsComplimentary != value))
				{
					this.OnIsComplimentaryChanging(value);
					this.SendPropertyChanging();
					this._IsComplimentary = value;
					this.SendPropertyChanged("IsComplimentary");
					this.OnIsComplimentaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuestPassword", DbType="VarChar(1000)")]
		public string GuestPassword
		{
			get
			{
				return this._GuestPassword;
			}
			set
			{
				if ((this._GuestPassword != value))
				{
					this.OnGuestPasswordChanging(value);
					this.SendPropertyChanging();
					this._GuestPassword = value;
					this.SendPropertyChanged("GuestPassword");
					this.OnGuestPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuestsCanComment", DbType="Bit")]
		public System.Nullable<bool> GuestsCanComment
		{
			get
			{
				return this._GuestsCanComment;
			}
			set
			{
				if ((this._GuestsCanComment != value))
				{
					this.OnGuestsCanCommentChanging(value);
					this.SendPropertyChanging();
					this._GuestsCanComment = value;
					this.SendPropertyChanged("GuestsCanComment");
					this.OnGuestsCanCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomUrl", DbType="VarChar(500)")]
		public string CustomUrl
		{
			get
			{
				return this._CustomUrl;
			}
			set
			{
				if ((this._CustomUrl != value))
				{
					this.OnCustomUrlChanging(value);
					this.SendPropertyChanging();
					this._CustomUrl = value;
					this.SendPropertyChanged("CustomUrl");
					this.OnCustomUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessEvent")]
	public partial class BusinessEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Type;
		
		private System.Nullable<System.DateTime> _OccuredOn;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<int> _TargetId;
		
		private System.Nullable<System.Guid> _RequestId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnOccuredOnChanging(System.Nullable<System.DateTime> value);
    partial void OnOccuredOnChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnTargetIdChanging(System.Nullable<int> value);
    partial void OnTargetIdChanged();
    partial void OnRequestIdChanging(System.Nullable<System.Guid> value);
    partial void OnRequestIdChanged();
    #endregion
		
		public BusinessEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccuredOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> OccuredOn
		{
			get
			{
				return this._OccuredOn;
			}
			set
			{
				if ((this._OccuredOn != value))
				{
					this.OnOccuredOnChanging(value);
					this.SendPropertyChanging();
					this._OccuredOn = value;
					this.SendPropertyChanged("OccuredOn");
					this.OnOccuredOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetId", DbType="Int")]
		public System.Nullable<int> TargetId
		{
			get
			{
				return this._TargetId;
			}
			set
			{
				if ((this._TargetId != value))
				{
					this.OnTargetIdChanging(value);
					this.SendPropertyChanging();
					this._TargetId = value;
					this.SendPropertyChanged("TargetId");
					this.OnTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessEventParameter")]
	public partial class BusinessEventParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _BusinessEventId;
		
		private string _Key;
		
		private string _ValueString;
		
		private System.Nullable<bool> _ValueBool;
		
		private System.Nullable<System.DateTime> _ValueDate;
		
		private System.Nullable<int> _ValueInt;
		
		private System.Nullable<double> _ValueFloat;
		
		private System.Nullable<System.Guid> _ValueGuid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnBusinessEventIdChanging(System.Guid value);
    partial void OnBusinessEventIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueStringChanging(string value);
    partial void OnValueStringChanged();
    partial void OnValueBoolChanging(System.Nullable<bool> value);
    partial void OnValueBoolChanged();
    partial void OnValueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnValueDateChanged();
    partial void OnValueIntChanging(System.Nullable<int> value);
    partial void OnValueIntChanged();
    partial void OnValueFloatChanging(System.Nullable<double> value);
    partial void OnValueFloatChanged();
    partial void OnValueGuidChanging(System.Nullable<System.Guid> value);
    partial void OnValueGuidChanged();
    #endregion
		
		public BusinessEventParameter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEventId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BusinessEventId
		{
			get
			{
				return this._BusinessEventId;
			}
			set
			{
				if ((this._BusinessEventId != value))
				{
					this.OnBusinessEventIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessEventId = value;
					this.SendPropertyChanged("BusinessEventId");
					this.OnBusinessEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="VarChar(100)")]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueString", DbType="VarChar(500)")]
		public string ValueString
		{
			get
			{
				return this._ValueString;
			}
			set
			{
				if ((this._ValueString != value))
				{
					this.OnValueStringChanging(value);
					this.SendPropertyChanging();
					this._ValueString = value;
					this.SendPropertyChanged("ValueString");
					this.OnValueStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueBool", DbType="Bit")]
		public System.Nullable<bool> ValueBool
		{
			get
			{
				return this._ValueBool;
			}
			set
			{
				if ((this._ValueBool != value))
				{
					this.OnValueBoolChanging(value);
					this.SendPropertyChanging();
					this._ValueBool = value;
					this.SendPropertyChanged("ValueBool");
					this.OnValueBoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ValueDate
		{
			get
			{
				return this._ValueDate;
			}
			set
			{
				if ((this._ValueDate != value))
				{
					this.OnValueDateChanging(value);
					this.SendPropertyChanging();
					this._ValueDate = value;
					this.SendPropertyChanged("ValueDate");
					this.OnValueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueInt", DbType="Int")]
		public System.Nullable<int> ValueInt
		{
			get
			{
				return this._ValueInt;
			}
			set
			{
				if ((this._ValueInt != value))
				{
					this.OnValueIntChanging(value);
					this.SendPropertyChanging();
					this._ValueInt = value;
					this.SendPropertyChanged("ValueInt");
					this.OnValueIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueFloat", DbType="Float")]
		public System.Nullable<double> ValueFloat
		{
			get
			{
				return this._ValueFloat;
			}
			set
			{
				if ((this._ValueFloat != value))
				{
					this.OnValueFloatChanging(value);
					this.SendPropertyChanging();
					this._ValueFloat = value;
					this.SendPropertyChanged("ValueFloat");
					this.OnValueFloatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ValueGuid
		{
			get
			{
				return this._ValueGuid;
			}
			set
			{
				if ((this._ValueGuid != value))
				{
					this.OnValueGuidChanging(value);
					this.SendPropertyChanging();
					this._ValueGuid = value;
					this.SendPropertyChanged("ValueGuid");
					this.OnValueGuidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Plan]")]
	public partial class Plan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private string _Title;
		
		private string _Notes;
		
		private int _BillingIntervalLength;
		
		private string _BillingIntervalUnit;
		
		private int _TrialIntervalLength;
		
		private string _TrialIntervalUnit;
		
		private System.Nullable<int> _VideosTotalMaxCount;
		
		private System.Nullable<int> _VideosPerBillingCycleMax;
		
		private System.Nullable<long> _VideoFileSizeMaxBytes;
		
		private System.Nullable<long> _AssetsTotalMaxBytes;
		
		private System.Nullable<int> _AssetsTotalMaxCount;
		
		private System.Nullable<int> _AssetsAllTimeMaxCount;
		
		private System.Nullable<long> _AssetFileSizeMaxBytes;
		
		private System.Nullable<int> _ProductionLimit;
		
		private bool _AllowSignups;
		
		private int _PriceInCents;
		
		private System.Nullable<int> _VideoDurationLimit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnBillingIntervalLengthChanging(int value);
    partial void OnBillingIntervalLengthChanged();
    partial void OnBillingIntervalUnitChanging(string value);
    partial void OnBillingIntervalUnitChanged();
    partial void OnTrialIntervalLengthChanging(int value);
    partial void OnTrialIntervalLengthChanged();
    partial void OnTrialIntervalUnitChanging(string value);
    partial void OnTrialIntervalUnitChanged();
    partial void OnVideosTotalMaxCountChanging(System.Nullable<int> value);
    partial void OnVideosTotalMaxCountChanged();
    partial void OnVideosPerBillingCycleMaxChanging(System.Nullable<int> value);
    partial void OnVideosPerBillingCycleMaxChanged();
    partial void OnVideoFileSizeMaxBytesChanging(System.Nullable<long> value);
    partial void OnVideoFileSizeMaxBytesChanged();
    partial void OnAssetsTotalMaxBytesChanging(System.Nullable<long> value);
    partial void OnAssetsTotalMaxBytesChanged();
    partial void OnAssetsTotalMaxCountChanging(System.Nullable<int> value);
    partial void OnAssetsTotalMaxCountChanged();
    partial void OnAssetsAllTimeMaxCountChanging(System.Nullable<int> value);
    partial void OnAssetsAllTimeMaxCountChanged();
    partial void OnAssetFileSizeMaxBytesChanging(System.Nullable<long> value);
    partial void OnAssetFileSizeMaxBytesChanged();
    partial void OnProductionLimitChanging(System.Nullable<int> value);
    partial void OnProductionLimitChanged();
    partial void OnAllowSignupsChanging(bool value);
    partial void OnAllowSignupsChanged();
    partial void OnPriceInCentsChanging(int value);
    partial void OnPriceInCentsChanged();
    partial void OnVideoDurationLimitChanging(System.Nullable<int> value);
    partial void OnVideoDurationLimitChanged();
    #endregion
		
		public Plan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(5000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingIntervalLength", DbType="Int NOT NULL")]
		public int BillingIntervalLength
		{
			get
			{
				return this._BillingIntervalLength;
			}
			set
			{
				if ((this._BillingIntervalLength != value))
				{
					this.OnBillingIntervalLengthChanging(value);
					this.SendPropertyChanging();
					this._BillingIntervalLength = value;
					this.SendPropertyChanged("BillingIntervalLength");
					this.OnBillingIntervalLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingIntervalUnit", DbType="VarChar(50)")]
		public string BillingIntervalUnit
		{
			get
			{
				return this._BillingIntervalUnit;
			}
			set
			{
				if ((this._BillingIntervalUnit != value))
				{
					this.OnBillingIntervalUnitChanging(value);
					this.SendPropertyChanging();
					this._BillingIntervalUnit = value;
					this.SendPropertyChanged("BillingIntervalUnit");
					this.OnBillingIntervalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialIntervalLength", DbType="Int NOT NULL")]
		public int TrialIntervalLength
		{
			get
			{
				return this._TrialIntervalLength;
			}
			set
			{
				if ((this._TrialIntervalLength != value))
				{
					this.OnTrialIntervalLengthChanging(value);
					this.SendPropertyChanging();
					this._TrialIntervalLength = value;
					this.SendPropertyChanged("TrialIntervalLength");
					this.OnTrialIntervalLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialIntervalUnit", DbType="VarChar(50)")]
		public string TrialIntervalUnit
		{
			get
			{
				return this._TrialIntervalUnit;
			}
			set
			{
				if ((this._TrialIntervalUnit != value))
				{
					this.OnTrialIntervalUnitChanging(value);
					this.SendPropertyChanging();
					this._TrialIntervalUnit = value;
					this.SendPropertyChanged("TrialIntervalUnit");
					this.OnTrialIntervalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideosTotalMaxCount", DbType="Int")]
		public System.Nullable<int> VideosTotalMaxCount
		{
			get
			{
				return this._VideosTotalMaxCount;
			}
			set
			{
				if ((this._VideosTotalMaxCount != value))
				{
					this.OnVideosTotalMaxCountChanging(value);
					this.SendPropertyChanging();
					this._VideosTotalMaxCount = value;
					this.SendPropertyChanged("VideosTotalMaxCount");
					this.OnVideosTotalMaxCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideosPerBillingCycleMax", DbType="Int")]
		public System.Nullable<int> VideosPerBillingCycleMax
		{
			get
			{
				return this._VideosPerBillingCycleMax;
			}
			set
			{
				if ((this._VideosPerBillingCycleMax != value))
				{
					this.OnVideosPerBillingCycleMaxChanging(value);
					this.SendPropertyChanging();
					this._VideosPerBillingCycleMax = value;
					this.SendPropertyChanged("VideosPerBillingCycleMax");
					this.OnVideosPerBillingCycleMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoFileSizeMaxBytes", DbType="BigInt")]
		public System.Nullable<long> VideoFileSizeMaxBytes
		{
			get
			{
				return this._VideoFileSizeMaxBytes;
			}
			set
			{
				if ((this._VideoFileSizeMaxBytes != value))
				{
					this.OnVideoFileSizeMaxBytesChanging(value);
					this.SendPropertyChanging();
					this._VideoFileSizeMaxBytes = value;
					this.SendPropertyChanged("VideoFileSizeMaxBytes");
					this.OnVideoFileSizeMaxBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetsTotalMaxBytes", DbType="BigInt")]
		public System.Nullable<long> AssetsTotalMaxBytes
		{
			get
			{
				return this._AssetsTotalMaxBytes;
			}
			set
			{
				if ((this._AssetsTotalMaxBytes != value))
				{
					this.OnAssetsTotalMaxBytesChanging(value);
					this.SendPropertyChanging();
					this._AssetsTotalMaxBytes = value;
					this.SendPropertyChanged("AssetsTotalMaxBytes");
					this.OnAssetsTotalMaxBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetsTotalMaxCount", DbType="Int")]
		public System.Nullable<int> AssetsTotalMaxCount
		{
			get
			{
				return this._AssetsTotalMaxCount;
			}
			set
			{
				if ((this._AssetsTotalMaxCount != value))
				{
					this.OnAssetsTotalMaxCountChanging(value);
					this.SendPropertyChanging();
					this._AssetsTotalMaxCount = value;
					this.SendPropertyChanged("AssetsTotalMaxCount");
					this.OnAssetsTotalMaxCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetsAllTimeMaxCount", DbType="Int")]
		public System.Nullable<int> AssetsAllTimeMaxCount
		{
			get
			{
				return this._AssetsAllTimeMaxCount;
			}
			set
			{
				if ((this._AssetsAllTimeMaxCount != value))
				{
					this.OnAssetsAllTimeMaxCountChanging(value);
					this.SendPropertyChanging();
					this._AssetsAllTimeMaxCount = value;
					this.SendPropertyChanged("AssetsAllTimeMaxCount");
					this.OnAssetsAllTimeMaxCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetFileSizeMaxBytes", DbType="BigInt")]
		public System.Nullable<long> AssetFileSizeMaxBytes
		{
			get
			{
				return this._AssetFileSizeMaxBytes;
			}
			set
			{
				if ((this._AssetFileSizeMaxBytes != value))
				{
					this.OnAssetFileSizeMaxBytesChanging(value);
					this.SendPropertyChanging();
					this._AssetFileSizeMaxBytes = value;
					this.SendPropertyChanged("AssetFileSizeMaxBytes");
					this.OnAssetFileSizeMaxBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionLimit", DbType="Int")]
		public System.Nullable<int> ProductionLimit
		{
			get
			{
				return this._ProductionLimit;
			}
			set
			{
				if ((this._ProductionLimit != value))
				{
					this.OnProductionLimitChanging(value);
					this.SendPropertyChanging();
					this._ProductionLimit = value;
					this.SendPropertyChanged("ProductionLimit");
					this.OnProductionLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSignups", DbType="Bit NOT NULL")]
		public bool AllowSignups
		{
			get
			{
				return this._AllowSignups;
			}
			set
			{
				if ((this._AllowSignups != value))
				{
					this.OnAllowSignupsChanging(value);
					this.SendPropertyChanging();
					this._AllowSignups = value;
					this.SendPropertyChanged("AllowSignups");
					this.OnAllowSignupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceInCents", DbType="Int NOT NULL")]
		public int PriceInCents
		{
			get
			{
				return this._PriceInCents;
			}
			set
			{
				if ((this._PriceInCents != value))
				{
					this.OnPriceInCentsChanging(value);
					this.SendPropertyChanging();
					this._PriceInCents = value;
					this.SendPropertyChanged("PriceInCents");
					this.OnPriceInCentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoDurationLimit", DbType="Int")]
		public System.Nullable<int> VideoDurationLimit
		{
			get
			{
				return this._VideoDurationLimit;
			}
			set
			{
				if ((this._VideoDurationLimit != value))
				{
					this.OnVideoDurationLimitChanging(value);
					this.SendPropertyChanging();
					this._VideoDurationLimit = value;
					this.SendPropertyChanged("VideoDurationLimit");
					this.OnVideoDurationLimitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
