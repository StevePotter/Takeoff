#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Takeoff.Views.Account
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Mediascend;
    using Mediascend.Web;
    using MvcContrib;
    using Takeoff;
    using Takeoff.Controllers;
    using Takeoff.Data;
    using Takeoff.Models;
    using Takeoff.Mvc;
    using Takeoff.Resources;
    using Takeoff.ViewModels;
    using Takeoff.Views.Helpers;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.3.2.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Account/Index-HasAccount.cshtml")]
    public class Index_HasAccount : System.Web.Mvc.WebViewPage<Takeoff.Data.IAccount>
    {
        public Index_HasAccount()
        {
        }
        public override void Execute()
        {


            
            #line 2 "..\..\Views\Account\Index-HasAccount.cshtml"
  
    Layout = "~/Views/Account/Layout.cshtml";
    ViewData["Heading"] = S.Account_Index_PageTitle;
    
    var plan = Model.Plan;

    var billingPeriodEndsOn = Model.CurrentBillingPeriodEndsOn();


            
            #line default
            #line hidden
WriteLiteral("\r\n    <h3>");


            
            #line 11 "..\..\Views\Account\Index-HasAccount.cshtml"
    Write("Account Status");

            
            #line default
            #line hidden
WriteLiteral("</h3>\r\n");


            
            #line 12 "..\..\Views\Account\Index-HasAccount.cshtml"
 if (Model.Status == AccountStatus.Trial)
{

            
            #line default
            #line hidden
WriteLiteral("    <p>You are in a free trial.  Your trial ends on ");


            
            #line 14 "..\..\Views\Account\Index-HasAccount.cshtml"
                                               Write(Model.TrialPeriodEndsOn.GetValueOrDefault().ToString(DateTimeFormat.ShortDate));

            
            #line default
            #line hidden
WriteLiteral(".  <a href=\"");


            
            #line 14 "..\..\Views\Account\Index-HasAccount.cshtml"
                                                                                                                                           Write(Url.Action<SignupController>(c => c.Index(null, null, null)));

            
            #line default
            #line hidden
WriteLiteral("\">Purchase Takeoff</a> or, <a href=\"mailto:support@takeoffvideo.com\">contact our " +
"sales team</a>.</p>\r\n");


            
            #line 15 "..\..\Views\Account\Index-HasAccount.cshtml"
}
else if (Model.Status == AccountStatus.TrialAnonymous)
{

            
            #line default
            #line hidden
WriteLiteral("    <p>");


            
            #line 18 "..\..\Views\Account\Index-HasAccount.cshtml"
   Write("You are in a Takeoff demo and haven't signed up yet.  You will be limited in what you can do but you can always sign up for free.");

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n");


            
            #line 19 "..\..\Views\Account\Index-HasAccount.cshtml"
}
else if (Model.Status == AccountStatus.Trial2)
{

            
            #line default
            #line hidden
WriteLiteral("    <p>");


            
            #line 22 "..\..\Views\Account\Index-HasAccount.cshtml"
   Write("You are in a free trial.  Enjoy, and purchase any time!");

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n");


            
            #line 23 "..\..\Views\Account\Index-HasAccount.cshtml"
}
else if (Model.Status == AccountStatus.Subscribed)
{

            
            #line default
            #line hidden
WriteLiteral("    <p>");


            
            #line 26 "..\..\Views\Account\Index-HasAccount.cshtml"
   Write("You are a paying customer.  Everythign is cool.  We love you and got your back.");

            
            #line default
            #line hidden
WriteLiteral("</p>    \r\n");


            
            #line 27 "..\..\Views\Account\Index-HasAccount.cshtml"
}
else
{

            
            #line default
            #line hidden
WriteLiteral("    <p>You are on the ");


            
            #line 30 "..\..\Views\Account\Index-HasAccount.cshtml"
                 Write(plan.Title);

            
            #line default
            #line hidden
WriteLiteral(" plan.  <a href=\"");


            
            #line 30 "..\..\Views\Account\Index-HasAccount.cshtml"
                                              Write(Url.Action<AccountPlanController>(c => c.Index()));

            
            #line default
            #line hidden
WriteLiteral("\">Change your plan.</a></p>\r\n");


            
            #line 31 "..\..\Views\Account\Index-HasAccount.cshtml"
}

            
            #line default
            #line hidden

            
            #line 32 "..\..\Views\Account\Index-HasAccount.cshtml"
 if (Model.Status != AccountStatus.TrialAnonymous && Model.Status != AccountStatus.Trial2)
{

            
            #line default
            #line hidden
WriteLiteral("    <h3>Current Billing Cycle</h3>\r\n");


            
            #line 35 "..\..\Views\Account\Index-HasAccount.cshtml"
if (Model.CreatedDuringBeta())
 {

            
            #line default
            #line hidden
WriteLiteral("     <em>Please note that statistics here don\'t include the complimentary stuff f" +
"rom our beta.</em>\r\n");


            
            #line 38 "..\..\Views\Account\Index-HasAccount.cshtml"
 }
if (Model.Status == AccountStatus.Subscribed && Model.CurrentBillingPeriodStartedOn.HasValue)
 {

            
            #line default
            #line hidden
WriteLiteral("     <p>Cycle began on ");


            
            #line 41 "..\..\Views\Account\Index-HasAccount.cshtml"
                  Write(Model.CurrentBillingPeriodStartedOn.Value.ToString(DateTimeFormat.ShortDate));

            
            #line default
            #line hidden
WriteLiteral(" and will end on ");


            
            #line 41 "..\..\Views\Account\Index-HasAccount.cshtml"
                                                                                                                Write(Model.CurrentBillingPeriodEndsOn().GetValueOrDefault().ToString(DateTimeFormat.ShortDate));

            
            #line default
            #line hidden
WriteLiteral(".</p>\r\n");


            
            #line 42 "..\..\Views\Account\Index-HasAccount.cshtml"
 }
}

            
            #line default
            #line hidden
WriteLiteral("\r\n<h3>Usage:</h3>\r\n<ul>\r\n");


            
            #line 47 "..\..\Views\Account\Index-HasAccount.cshtml"
 if (plan == null || !plan.ProductionLimit.HasValue)
{

            
            #line default
            #line hidden
WriteLiteral("    <li>Productions: ");


            
            #line 49 "..\..\Views\Account\Index-HasAccount.cshtml"
                Write(Model.ProductionCountBillable);

            
            #line default
            #line hidden
WriteLiteral(".  Keep em coming!</li>    \r\n");


            
            #line 50 "..\..\Views\Account\Index-HasAccount.cshtml"
}
else
{

            
            #line default
            #line hidden
WriteLiteral("    <li>Productions: ");


            
            #line 53 "..\..\Views\Account\Index-HasAccount.cshtml"
                Write(Model.ProductionCountBillable);

            
            #line default
            #line hidden
WriteLiteral(" of ");


            
            #line 53 "..\..\Views\Account\Index-HasAccount.cshtml"
                                                   Write(plan.ProductionLimit.Value);

            
            #line default
            #line hidden
WriteLiteral(".  ");


            
            #line 53 "..\..\Views\Account\Index-HasAccount.cshtml"
                                                                                  Write(Model.ProductionCountBillable.PercentString(plan.ProductionLimit.Value));

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");


            
            #line 54 "..\..\Views\Account\Index-HasAccount.cshtml"
}

            
            #line default
            #line hidden

            
            #line 55 "..\..\Views\Account\Index-HasAccount.cshtml"
 if (plan == null || !plan.VideosPerBillingCycleMax.HasValue)
{

            
            #line default
            #line hidden
WriteLiteral("    <li>Videos uploaded:  ");


            
            #line 57 "..\..\Views\Account\Index-HasAccount.cshtml"
                     Write(Model.VideosAddedInBillingCycle);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");


            
            #line 58 "..\..\Views\Account\Index-HasAccount.cshtml"
}
else
{

            
            #line default
            #line hidden
WriteLiteral("    <li>Videos uploaded:  ");


            
            #line 61 "..\..\Views\Account\Index-HasAccount.cshtml"
                     Write(Model.VideosAddedInBillingCycle);

            
            #line default
            #line hidden
WriteLiteral(" of ");


            
            #line 61 "..\..\Views\Account\Index-HasAccount.cshtml"
                                                         Write(plan.VideosPerBillingCycleMax);

            
            #line default
            #line hidden
WriteLiteral(".</li>\r\n");


            
            #line 62 "..\..\Views\Account\Index-HasAccount.cshtml"
}

            
            #line default
            #line hidden

            
            #line 63 "..\..\Views\Account\Index-HasAccount.cshtml"
 if (plan == null || !plan.VideosTotalMaxCount.HasValue)
{

            
            #line default
            #line hidden
WriteLiteral("    <li>Videos at once:  ");


            
            #line 65 "..\..\Views\Account\Index-HasAccount.cshtml"
                    Write(Model.VideoCountBillable);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");


            
            #line 66 "..\..\Views\Account\Index-HasAccount.cshtml"
}
else
{

            
            #line default
            #line hidden
WriteLiteral("    <li>Videos at once: ");


            
            #line 69 "..\..\Views\Account\Index-HasAccount.cshtml"
                   Write(Model.VideoCountBillable);

            
            #line default
            #line hidden
WriteLiteral(" of ");


            
            #line 69 "..\..\Views\Account\Index-HasAccount.cshtml"
                                                Write(plan.VideosTotalMaxCount);

            
            #line default
            #line hidden
WriteLiteral(".</li>\r\n");


            
            #line 70 "..\..\Views\Account\Index-HasAccount.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 72 "..\..\Views\Account\Index-HasAccount.cshtml"
 if (plan == null || !plan.AssetsTotalMaxSize.HasValue)
{

            
            #line default
            #line hidden
WriteLiteral("    <li>Assets: ");


            
            #line 74 "..\..\Views\Account\Index-HasAccount.cshtml"
           Write(Model.AssetsTotalSizeBillable.ToString());

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");


            
            #line 75 "..\..\Views\Account\Index-HasAccount.cshtml"
}
else
{

            
            #line default
            #line hidden
WriteLiteral("    <li>Assets: ");


            
            #line 78 "..\..\Views\Account\Index-HasAccount.cshtml"
           Write(Model.AssetsTotalSizeBillable.ToString());

            
            #line default
            #line hidden
WriteLiteral(" of ");


            
            #line 78 "..\..\Views\Account\Index-HasAccount.cshtml"
                                                        Write(plan.AssetsTotalMaxSize.ToString());

            
            #line default
            #line hidden
WriteLiteral(".  ");


            
            #line 78 "..\..\Views\Account\Index-HasAccount.cshtml"
                                                                                              Write(Model.AssetsTotalSizeBillable.Bytes.PercentString(plan.AssetsTotalMaxSize.Value.Bytes));

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");


            
            #line 79 "..\..\Views\Account\Index-HasAccount.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("</ul>\r\n\r\n");


            
            #line 82 "..\..\Views\Account\Index-HasAccount.cshtml"
 if (Model.Status != AccountStatus.TrialAnonymous && Model.Status != AccountStatus.Trial2)
{

            
            #line default
            #line hidden
WriteLiteral("    <p>For more usage, you can <a href=\"");


            
            #line 84 "..\..\Views\Account\Index-HasAccount.cshtml"
                                    Write(Url.Action<AccountPlanController>(c => c.Index()));

            
            #line default
            #line hidden
WriteLiteral("\">upgrade your plan</a>.  You can always downgrade later :)</p>\r\n");


            
            #line 85 "..\..\Views\Account\Index-HasAccount.cshtml"
}

            
            #line default
            #line hidden

        }
    }
}
#pragma warning restore 1591
