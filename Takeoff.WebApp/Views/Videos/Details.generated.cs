#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Takeoff.Views.Videos
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Mediascend;
    using Mediascend.Web;
    using MvcContrib;
    using Takeoff;
    using Takeoff.Controllers;
    using Takeoff.Data;
    using Takeoff.Models;
    using Takeoff.Mvc;
    using Takeoff.Resources;
    using Takeoff.ViewModels;
    using Takeoff.Views.Helpers;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.3.2.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Videos/Details.cshtml")]
    public class Details : System.Web.Mvc.WebViewPage<Videos_Details>
    {
        public Details()
        {
        }
        public override void Execute()
        {


            
            #line 2 "..\..\Views\Videos\Details.cshtml"
  
    Layout = "~/Views/Shared/Layout-App-Medium.cshtml"; 
    ViewData.AddBodyCss("production-details");

    ViewData["PageTitle"] = Model.Video.Title;
    if (!Model.IsMember)
    {
        ViewData.AddBodyCss("not-logged-in");
    }


            
            #line default
            #line hidden

DefineSection("JsExternal", () => {

WriteLiteral("\r\n    ");


            
            #line 14 "..\..\Views\Videos\Details.cshtml"
Write(Html.JsLib("interior.js"));

            
            #line default
            #line hidden
WriteLiteral("\r\n    ");


            
            #line 15 "..\..\Views\Videos\Details.cshtml"
Write(Html.JsLib("productions-details.js"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


});

WriteLiteral("\r\n");


DefineSection("CssInline", () => {

WriteLiteral("\r\n    #video-details-title\r\n    {\r\n        display:none;\r\n    }\r\n    #mainArea\r\n " +
"   {\r\n        width: 740px;\r\n        margin-left: 60px;\r\n    }\r\n");


});

WriteLiteral("\r\n");


DefineSection("JsDocReady", () => {

WriteLiteral("\r\n    videoDetailsData =  ");


            
            #line 31 "..\..\Views\Videos\Details.cshtml"
                   Write(Html.Json(Model.Video, true));

            
            #line default
            #line hidden
WriteLiteral("; \r\n    notification = $(\"body\").madNotification({ api: true });\r\n    productionD" +
"ata = ");


            
            #line 33 "..\..\Views\Videos\Details.cshtml"
                Write(Html.Json(new
                     {
                         Model.CanAddComment,
                         Model.CanAddCommentReply,
                         Model.IsMember,
                     }));

            
            #line default
            #line hidden
WriteLiteral(";\r\n");


            
            #line 39 "..\..\Views\Videos\Details.cshtml"
     if (Model.SemiAnonymousUserName.HasChars())
    {

            
            #line default
            #line hidden
WriteLiteral("        ");

WriteLiteral("\r\n    productionData.SemiAnonymousUserName = ");


            
            #line 42 "..\..\Views\Videos\Details.cshtml"
                                      Write(Html.Json(Model.SemiAnonymousUserName));

            
            #line default
            #line hidden
WriteLiteral(";\r\n        ");

WriteLiteral("\r\n");


            
            #line 44 "..\..\Views\Videos\Details.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral(@"                     
    initPlayer();
    isVideoDetailsOpen = true;
    isVideosTabOpen = function()
    {
        return true;
    };
    initHotKeys();  
    initComments();
    addComments();
    $(""#commentsArea"").show();//todo: find out why it's hiding

");


});

WriteLiteral("\r\n\r\n");


DefineSection("Header", () => {

WriteLiteral("\r\n    <h1>");


            
            #line 61 "..\..\Views\Videos\Details.cshtml"
   Write(Model.Video.Title);

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 62 "..\..\Views\Videos\Details.cshtml"
     if (Model.Production.Logo != null)
    {

            
            #line default
            #line hidden
WriteLiteral("        <img src=\"");


            
            #line 64 "..\..\Views\Videos\Details.cshtml"
             Write(Model.Production.Logo.Url);

            
            #line default
            #line hidden
WriteLiteral("\" alt=\"Logo\" style=\"width:");


            
            #line 64 "..\..\Views\Videos\Details.cshtml"
                                                                 Write(Model.Production.Logo.Width.ToInvariant());

            
            #line default
            #line hidden
WriteLiteral("px;height:");


            
            #line 64 "..\..\Views\Videos\Details.cshtml"
                                                                                                                     Write(Model.Production.Logo.Height.ToInvariant());

            
            #line default
            #line hidden
WriteLiteral("px;\" />\r\n");


            
            #line 65 "..\..\Views\Videos\Details.cshtml"
    }

            
            #line default
            #line hidden

            
            #line 66 "..\..\Views\Videos\Details.cshtml"
     if (Model.Video.IsSourceDownloadable)
    {

            
            #line default
            #line hidden
WriteLiteral("        <a class=\"btn btn-small\" href=\"");


            
            #line 68 "..\..\Views\Videos\Details.cshtml"
                                   Write(Url.Action<VideosController>(c => c.Download(Model.Video.Id)));

            
            #line default
            #line hidden
WriteLiteral("\"><i class=\"icon-download\"></i> Download</a>\r\n");


            
            #line 69 "..\..\Views\Videos\Details.cshtml"
    } 

            
            #line default
            #line hidden
WriteLiteral("    </h1>\r\n");


});

WriteLiteral("\r\n\r\n<div class=\"row\">\r\n<div id=\"mainArea\" class=\"\">\r\n<div id=\"video-details-conta" +
"iner\">\r\n        <div id=\"player-container\"></div>\r\n        <div id=\"commentsArea" +
"\">\r\n            <h2>Comments <span class=\"quantity\" id=\"commentsQuantity\">(0)</s" +
"pan>\r\n");


            
            #line 79 "..\..\Views\Videos\Details.cshtml"
                 if (Model.CanAddComment)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <a href=\"#\" class=\"");


            
            #line 81 "..\..\Views\Videos\Details.cshtml"
                                  Write(Html.PrimaryButtonClass());

            
            #line default
            #line hidden
WriteLiteral("\" id=\"addCommentBtnInHeader\">Add Comment</a>\r\n");


            
            #line 82 "..\..\Views\Videos\Details.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </h2>\r\n");


            
            #line 84 "..\..\Views\Videos\Details.cshtml"
             if (Model.CanAddComment)
            {

            
            #line default
            #line hidden
WriteLiteral("                <form id=\"comment-add-form\" action=\"");


            
            #line 86 "..\..\Views\Videos\Details.cshtml"
                                               Write(Url.Action("Create", "Comments"));

            
            #line default
            #line hidden
WriteLiteral(@""" style=""display: none"">
                    <label for=""comment-add-form-body-input"">New Comment</label>
                    <textarea rows=""3"" type=""text"" id=""comment-add-form-body-input"" name=""body""></textarea>
                    <div id=""comment-add-form-isTimed-container"">
                        <label for=""comment-add-form-isTimed-group"">For</label>
                        <div id=""comment-add-form-isTimed-group"">                
                            <input type=""radio"" id=""comment-add-form-isTimed-input-true"" name=""timed"" value=""true"">
                            <label for=""comment-add-form-isTimed-input-true"">Right Now (<span id=""comment-add-form-isTimed-timecode"">0:00</span>)</label>
                            <input type=""radio"" id=""comment-add-form-isTimed-input-false"" name=""timed"" value=""false"">
                            <label for=""comment-add-form-isTimed-input-false"">Entire Video</label>
                        </div>
                    </div>
");


            
            #line 98 "..\..\Views\Videos\Details.cshtml"
                     if ( !Model.IsMember && !Model.SemiAnonymousUserName.HasChars())
                    {

            
            #line default
            #line hidden
WriteLiteral(@"                    <div class=""field"" id=""comment-add-form-name"">
                        <label for=""comment-add-form-name-input"">Your Name</label>
                        <input type=""text"" id=""comment-add-form-name-input"" name=""name"" value="""" />                        
                    </div>
");


            
            #line 104 "..\..\Views\Videos\Details.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <div class=\"buttons\">\r\n                        <input type=\"s" +
"ubmit\" value=\"Add Comment\" class=\"");


            
            #line 106 "..\..\Views\Videos\Details.cshtml"
                                                                   Write(Html.PrimaryButtonClass());

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n                        <a href=\"#\" class=\"btn cancel-button\">Cancel</a>\r\n " +
"                   </div>\r\n                </form>\r\n");


            
            #line 110 "..\..\Views\Videos\Details.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            <div id=\"commentsEmpty\" class=\"empty-data-msg ");


            
            #line 111 "..\..\Views\Videos\Details.cshtml"
                                                     Write(Html.AlertInfoClass(true));

            
            #line default
            #line hidden
WriteLiteral("\">\r\n                No comments have been written yet.\r\n");


            
            #line 113 "..\..\Views\Videos\Details.cshtml"
                 if (Model.CanAddComment)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <a href=\"#\">Be the first!</a>\r\n");


            
            #line 116 "..\..\Views\Videos\Details.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </div>\r\n            <div id=\"comments\">\r\n            </div>\r\n        " +
"</div>\r\n    </div>\r\n</div>\r\n</div>");


        }
    }
}
#pragma warning restore 1591
