#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Takeoff.Views.Shared
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Mediascend;
    using Mediascend.Web;
    using MvcContrib;
    using Takeoff;
    using Takeoff.Controllers;
    using Takeoff.Data;
    using Takeoff.Models;
    using Takeoff.Mvc;
    using Takeoff.Resources;
    using Takeoff.ViewModels;
    using Takeoff.Views.Helpers;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.3.2.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Shared/Layout-Base.cshtml")]
    public class Layout_Base : System.Web.Mvc.WebViewPage<dynamic>
    {
        public Layout_Base()
        {
        }
        public override void Execute()
        {
WriteLiteral("<!DOCTYPE html>\r\n");


            
            #line 2 "..\..\Views\Shared\Layout-Base.cshtml"
  
    var prefixes = Url.UrlPrefixes();
    var checkCookies = ViewData["CheckForCookies"] != null;

    //if they specify a css class specific to this page, use that.  otherwise use the controller-action syntax
    var bodyCssClasses = ViewData.BodyCssClasses();

    var controllerName = ViewData["ControllerName"].CastTo<string>();
    var actionName = ViewData["ActionName"].CastTo<string>();
    if ( controllerName.HasChars() && actionName.HasChars())
    {
        bodyCssClasses.Add(controllerName.LowerFirstChar() + "-area");
        bodyCssClasses.Add(controllerName.LowerFirstChar() + "-" + actionName.LowerFirstChar());
    }
    
    var banners = (List<Banner>)ViewBag.__banners;//generally for warnings and whatnot
    //note: apple-touch-icon shuld have an absolute url, which it always done in production cuz it lives on the cdn.  this is because apparently android only works iwth absolute url

    var startupMessage = Model as Takeoff.ViewModels.StartupMessage;
    if (startupMessage == null)
    {
        startupMessage = (Takeoff.ViewModels.StartupMessage) ViewData["StartupMessage"];
    }
    var hasStartupMessage = startupMessage != null && startupMessage.StartupMessageBody.HasChars();
    var title = (string)ViewData["PageTitle"];
    if ( title == null )
    {
        title = S.DefaultPageTitle;   
    }
    else
    {
        title = S.PageTitlePrefix + title;
    }
    var stealthMode = Takeoff.Global.StealthUI;


            
            #line default
            #line hidden
WriteLiteral("<html>\r\n<head>\r\n");


            
            #line 39 "..\..\Views\Shared\Layout-Base.cshtml"
     if (!stealthMode)
    {

            
            #line default
            #line hidden
WriteLiteral("    <title>");


            
            #line 41 "..\..\Views\Shared\Layout-Base.cshtml"
      Write(title);

            
            #line default
            #line hidden
WriteLiteral("</title>\r\n");



WriteLiteral("    <link rel=\"shortcut icon\" href=\"");


            
            #line 42 "..\..\Views\Shared\Layout-Base.cshtml"
                               Write(this.Url.Asset("/Assets/favicon.ico"));

            
            #line default
            #line hidden
WriteLiteral("\" type=\"image/x-icon\" />\r\n");



WriteLiteral("    <link rel=\"apple-touch-icon\" href=\"");


            
            #line 43 "..\..\Views\Shared\Layout-Base.cshtml"
                                  Write(this.Url.Asset("/Assets/apple-touch-icon.png"));

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");


            
            #line 44 "..\..\Views\Shared\Layout-Base.cshtml"
    }
    else
    {

            
            #line default
            #line hidden
WriteLiteral("        <title>New Tab</title>");



WriteLiteral("<!-- Actual title: ");


            
            #line 47 "..\..\Views\Shared\Layout-Base.cshtml"
                                            Write(title);

            
            #line default
            #line hidden
WriteLiteral(" -->\r\n");


            
            #line 48 "..\..\Views\Shared\Layout-Base.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />  \r\n\r" +
"\n    ");


            
            #line 51 "..\..\Views\Shared\Layout-Base.cshtml"
Write(Html.CssLib(@ViewData["MainCssLib"].CastTo<string>().CharsOrEmpty()));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 52 "..\..\Views\Shared\Layout-Base.cshtml"
     if (stealthMode)
    {
        
            
            #line default
            #line hidden
            
            #line 54 "..\..\Views\Shared\Layout-Base.cshtml"
   Write(Html.CssLib("styles/stealthUI-3.css"));

            
            #line default
            #line hidden
            
            #line 54 "..\..\Views\Shared\Layout-Base.cshtml"
                                              
    }

            
            #line default
            #line hidden
WriteLiteral("    ");


            
            #line 56 "..\..\Views\Shared\Layout-Base.cshtml"
Write(RenderSection("CssExternal", false));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 57 "..\..\Views\Shared\Layout-Base.cshtml"
     if (IsSectionDefined("CssInline"))
    {

            
            #line default
            #line hidden
WriteLiteral("    <style type=\"text/css\">        \r\n        ");


            
            #line 60 "..\..\Views\Shared\Layout-Base.cshtml"
   Write(RenderSection("CssInline", false));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </style>\r\n");


            
            #line 62 "..\..\Views\Shared\Layout-Base.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    <script language=\"javascript\" type=\"text/javascript\">\r\n        window.urlPref" +
"ixes = {\r\n            asset: \'");


            
            #line 65 "..\..\Views\Shared\Layout-Base.cshtml"
               Write(prefixes.Asset);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            relative: \'");


            
            #line 66 "..\..\Views\Shared\Layout-Base.cshtml"
                  Write(prefixes.Relative);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            relativeHttps: \'");


            
            #line 67 "..\..\Views\Shared\Layout-Base.cshtml"
                       Write(prefixes.RelativeHttps);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            absoluteHttp: \'");


            
            #line 68 "..\..\Views\Shared\Layout-Base.cshtml"
                      Write(prefixes.AbsoluteHttp);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            absoluteHttps: \'");


            
            #line 69 "..\..\Views\Shared\Layout-Base.cshtml"
                       Write(prefixes.AbsoluteHttps);

            
            #line default
            #line hidden
WriteLiteral("\'\r\n        };\r\n    </script>\r\n    ");


            
            #line 72 "..\..\Views\Shared\Layout-Base.cshtml"
Write(Html.JsLib("main.js"));

            
            #line default
            #line hidden
WriteLiteral("    \r\n    ");


            
            #line 73 "..\..\Views\Shared\Layout-Base.cshtml"
Write(StackExchange.Profiling.MiniProfiler.RenderIncludes());

            
            #line default
            #line hidden
WriteLiteral("\r\n    ");


            
            #line 74 "..\..\Views\Shared\Layout-Base.cshtml"
Write(RenderSection("JsExternal", false));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <script language=\"javascript\" type=\"text/javascript\">\r\n        ");


            
            #line 76 "..\..\Views\Shared\Layout-Base.cshtml"
   Write(RenderSection("JsInline", false));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 77 "..\..\Views\Shared\Layout-Base.cshtml"
     if (stealthMode)
    {

            
            #line default
            #line hidden
WriteLiteral("        ");

WriteLiteral("\r\n        $(document).ready(function() {\r\n            $(\"#stealth-cover\").click(f" +
"unction()\r\n            {\r\n                $(this).hide();\r\n            });\r\n");


            
            #line 85 "..\..\Views\Shared\Layout-Base.cshtml"
            if (this.Request.UrlReferrer != null)
           {

            
            #line default
            #line hidden
WriteLiteral("               ");

WriteLiteral("\r\n            $(\"#stealth-cover\").hide();\r\n            ");

WriteLiteral("\r\n");


            
            #line 90 "..\..\Views\Shared\Layout-Base.cshtml"
           }

            
            #line default
            #line hidden
WriteLiteral("            $(document).keyup(function(e) {\r\n                    if (e.keyCode ==" +
" 27) { $(\"#stealth-cover\").show(); } \r\n            });\r\n        });\r\n        ");

WriteLiteral("\r\n");


            
            #line 96 "..\..\Views\Shared\Layout-Base.cshtml"
    }

            
            #line default
            #line hidden

            
            #line 97 "..\..\Views\Shared\Layout-Base.cshtml"
     if (checkCookies || hasStartupMessage || IsSectionDefined("JsDocReady"))
    {

            
            #line default
            #line hidden
WriteLiteral("        ");

WriteLiteral("\r\n        $(document).ready(function() {\r\n        ");

WriteLiteral("\r\n");


            
            #line 102 "..\..\Views\Shared\Layout-Base.cshtml"
        if (checkCookies)
        {

            
            #line default
            #line hidden
WriteLiteral("            ");

WriteLiteral("\r\n            if (!$.cookiesEnabled())\r\n            {\r\n                $.goTo(\"/N" +
"oCookies\");\r\n            }\r\n        ");

WriteLiteral("\r\n");


            
            #line 110 "..\..\Views\Shared\Layout-Base.cshtml"
        }
        if (hasStartupMessage)
        {
            var messageType = (startupMessage.StartupMessageType == StartupMessageType.NotSet ? StartupMessageType.Success : startupMessage.StartupMessageType).ToString().ToLowerInvariant();

            
            #line default
            #line hidden
WriteLiteral("            ");

WriteLiteral("\r\n        var msg = ");


            
            #line 115 "..\..\Views\Shared\Layout-Base.cshtml"
             Write(Html.Json(new { text = startupMessage.StartupMessageBody, type = messageType }));

            
            #line default
            #line hidden
WriteLiteral(";\r\n        $(\"body\").madNotification({ api: true })[msg.type](msg.text);\r\n       " +
" ");

WriteLiteral("\r\n");


            
            #line 118 "..\..\Views\Shared\Layout-Base.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

WriteLiteral("\r\n        ");


            
            #line 120 "..\..\Views\Shared\Layout-Base.cshtml"
   Write(RenderSection("JsDocReady", false));

            
            #line default
            #line hidden
WriteLiteral("\r\n        });\r\n        ");

WriteLiteral("\r\n");


            
            #line 123 "..\..\Views\Shared\Layout-Base.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    ");


            
            #line 124 "..\..\Views\Shared\Layout-Base.cshtml"
Write(Html.GoogleAnalytics());

            
            #line default
            #line hidden
WriteLiteral("\r\n    </script>\r\n    <!--[if lt IE 9]>\r\n    <script src=\"//html5shim.googlecode.c" +
"om/svn/trunk/html5.js\"></script>\r\n    <![endif]-->\r\n</head>\r\n<body class=\"");


            
            #line 130 "..\..\Views\Shared\Layout-Base.cshtml"
        Write(string.Join(" ",bodyCssClasses));

            
            #line default
            #line hidden
WriteLiteral("\">\r\n");


            
            #line 131 "..\..\Views\Shared\Layout-Base.cshtml"
     if (stealthMode)
    {

            
            #line default
            #line hidden
WriteLiteral("        <div id=\"stealth-cover\"></div>\r\n");


            
            #line 134 "..\..\Views\Shared\Layout-Base.cshtml"
    }

            
            #line default
            #line hidden

            
            #line 135 "..\..\Views\Shared\Layout-Base.cshtml"
     if (banners.HasItems())
    {
        foreach (var banner in banners)
        {
            if (banner.HtmlEncode)
            {

            
            #line default
            #line hidden
WriteLiteral("                 <div class=\"warningBanner\">");


            
            #line 141 "..\..\Views\Shared\Layout-Base.cshtml"
                                       Write(banner.Source);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");


            
            #line 142 "..\..\Views\Shared\Layout-Base.cshtml"
            }
            else
            {

            
            #line default
            #line hidden
WriteLiteral("                 <div class=\"warningBanner\">");


            
            #line 145 "..\..\Views\Shared\Layout-Base.cshtml"
                                       Write(Html.Raw(banner.Source));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");


            
            #line 146 "..\..\Views\Shared\Layout-Base.cshtml"
            }
        }
    }

            
            #line default
            #line hidden

            
            #line 149 "..\..\Views\Shared\Layout-Base.cshtml"
     if (ViewData["IncludeNoScriptWarning"].ValueOr(false))
    {

            
            #line default
            #line hidden
WriteLiteral("        <noscript>\r\n            <p class=\"alert-message error\">");


            
            #line 152 "..\..\Views\Shared\Layout-Base.cshtml"
                                      Write(S.Shared_NoJavascript_Error.FormatResource(Html.StartTag("a").Href("http://www.iatn.net/help/javascript/").Attr("target", "_blank")));

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n        </noscript>\r\n");


            
            #line 154 "..\..\Views\Shared\Layout-Base.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    ");


            
            #line 155 "..\..\Views\Shared\Layout-Base.cshtml"
Write(RenderBody());

            
            #line default
            #line hidden
WriteLiteral("\r\n</body>\r\n<!-- See takeoffvideo.com/thanksto for a list of all the awesome proje" +
"cts and companies we use to make Takeoff possible -->\r\n</html>\r\n");


        }
    }
}
#pragma warning restore 1591
